# ═══════════════════════════════════════════════════════════════════════════
# VÉRTICE-MAXIMUS ENVIRONMENT CONFIGURATION
# ═══════════════════════════════════════════════════════════════════════════
#
# Copy this file to .env and configure your settings.
# Run `vertice init` for interactive setup.
#
# ═══════════════════════════════════════════════════════════════════════════

# ───────────────────────────────────────────────────────────────────────────
# LLM PROVIDERS (Multi-LLM Support)
# ───────────────────────────────────────────────────────────────────────────

# Primary LLM (choose one: claude, openai, gemini, custom)
PRIMARY_LLM=claude

# Claude (Anthropic) - Recommended for advanced reasoning
CLAUDE_API_KEY=your_claude_api_key_here
CLAUDE_MODEL=claude-3-sonnet-20240229
CLAUDE_MAX_TOKENS=4096

# OpenAI (GPT)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4096

# Google Gemini
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-pro
GEMINI_MAX_TOKENS=4096

# Custom / Local LLM (e.g., Ollama, LM Studio)
CUSTOM_LLM_ENDPOINT=http://localhost:11434
CUSTOM_LLM_MODEL=llama2
CUSTOM_LLM_API_KEY=optional_if_required

# ───────────────────────────────────────────────────────────────────────────
# DEFENSE CONFIGURATION
# ───────────────────────────────────────────────────────────────────────────

# Defense profile: paranoid, balanced, lightweight, custom
DEFENSE_PROFILE=balanced

# Enable/disable specific immune layers (true/false)
ENABLE_FIREWALL=true
ENABLE_REFLEX_DEFENSE=true
ENABLE_NEUTROPHILS=true
ENABLE_MACROPHAGES=true
ENABLE_DENDRITIC_CELLS=true
ENABLE_T_HELPER_CELLS=true
ENABLE_ADAPTIVE_IMMUNITY=true
ENABLE_MEMORY=true
ENABLE_CONSCIOUSNESS=true

# ───────────────────────────────────────────────────────────────────────────
# OFFENSIVE SECURITY (Requires authorization)
# ───────────────────────────────────────────────────────────────────────────

# Enable offensive tools (red team, pentesting)
ENABLE_OFFENSIVE=false

# Authorization token (contact security@vertice.dev for authorized use)
OFFENSIVE_AUTHORIZATION_TOKEN=

# C2 Configuration (for authorized penetration testing only)
C2_ENABLED=false
C2_CALLBACK_URL=

# ───────────────────────────────────────────────────────────────────────────
# OSINT & INTELLIGENCE GATHERING
# ───────────────────────────────────────────────────────────────────────────

ENABLE_OSINT=true

# Threat intelligence feeds
THREAT_INTEL_API_KEY=
VIRUSTOTAL_API_KEY=
SHODAN_API_KEY=
ABUSEIPDB_API_KEY=

# ───────────────────────────────────────────────────────────────────────────
# DATABASE & STORAGE
# ───────────────────────────────────────────────────────────────────────────

# PostgreSQL (for threat memory and analytics)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=vertice
POSTGRES_USER=vertice
POSTGRES_PASSWORD=your_secure_password_here

# Redis (for caching and real-time data)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
GATEWAY_HEALTH_REDIS_URL=redis://redis:6379/0

# ───────────────────────────────────────────────────────────────────────────
# SERVICE PORTS
# ───────────────────────────────────────────────────────────────────────────

NEUROMODULATION_PORT=8001
MEMORY_CONSOLIDATION_PORT=8002
HSAS_PORT=8003
STRATEGIC_PLANNING_PORT=8004
IMMUNIS_PORT=8005
API_PORT=8080
FRONTEND_PORT=5173

# ───────────────────────────────────────────────────────────────────────────
# MONITORING & OBSERVABILITY
# ───────────────────────────────────────────────────────────────────────────

# Prometheus metrics
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
METRICS_PORT_RANGE=8001-8005

# Grafana dashboards
GRAFANA_ENABLED=true
GRAFANA_PORT=3000
GRAFANA_ADMIN_PASSWORD=admin

# Jaeger tracing
JAEGER_ENABLED=true
JAEGER_ENDPOINT=http://localhost:14268/api/traces
ENABLE_TRACING=false

# Node exporter
NODE_EXPORTER_PORT=9100

# Health checks
ENABLE_HEALTH_CHECKS=true
HEALTH_CHECK_INTERVAL=30

# Logging level (debug, info, warn, error)
LOG_LEVEL=info
LOG_FORMAT=json
ENABLE_FILE_LOGGING=true
ENABLE_CONSOLE_LOGGING=true

# ───────────────────────────────────────────────────────────────────────────
# API & NETWORKING
# ───────────────────────────────────────────────────────────────────────────

# API Server
API_HOST=0.0.0.0
API_SECRET_KEY=generate_a_secure_random_key_here

# Frontend
REACT_APP_API_BASE_URL=http://localhost
REACT_APP_ENABLE_MOCK_DATA=false

# CORS origins (comma-separated)
ENABLE_CORS=true
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8080

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# Network Configuration
NETWORK_NAME=maximus-ai-network
NETWORK_SUBNET=172.25.0.0/16

# ───────────────────────────────────────────────────────────────────────────
# SECURITY
# ───────────────────────────────────────────────────────────────────────────

# Vault (for secrets management)
VAULT_ENABLED=false
VAULT_ADDR=http://localhost:8200
VAULT_TOKEN=

# JWT Authentication
JWT_SECRET=generate_a_secure_random_jwt_secret_here
JWT_EXPIRATION=24h

# Vértice Registry
VERTICE_REGISTRY_URL=http://vertice-register-lb:80
VERTICE_REGISTRY_TOKEN=titanium-registry-token

# MAXIMUS API Key
MAXIMUS_API_KEY=change_this_api_key_in_production
SECRET_KEY=change_this_to_a_random_secret_key_in_production

# Google OAuth Configuration
GOOGLE_CLIENT_ID=your_google_client_id_here
GOOGLE_CLIENT_SECRET=your_google_client_secret_here

# Authorization Configuration
AUTHORIZED_DOMAINS=yourdomain.com,anotherdomain.org
AUTHORIZED_EMAILS=admin@yourdomain.com,analyst@yourdomain.com
ADMIN_EMAILS=admin@yourdomain.com

# Development - Leave empty to allow any Gmail account
# AUTHORIZED_DOMAINS=
# AUTHORIZED_EMAILS=
# ADMIN_EMAILS=

# ───────────────────────────────────────────────────────────────────────────
# DEPLOYMENT
# ───────────────────────────────────────────────────────────────────────────

# Environment (development, staging, production)
ENVIRONMENT=production
NODE_ENV=development
PYTHON_ENV=development
DEBUG=false
PYTHONUNBUFFERED=1
TZ=UTC

# Docker Compose profiles
COMPOSE_PROJECT_NAME=maximus-ai-3
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1
COMPOSE_PROFILES=core,defense,ai

# Kubernetes namespace (if using K8s)
K8S_NAMESPACE=vertice

# Volume Configuration
DATA_VOLUME_PATH=/var/lib/maximus
LOGS_VOLUME_PATH=/var/log/maximus
BACKUP_VOLUME_PATH=/var/backups/maximus

# ───────────────────────────────────────────────────────────────────────────
# PERFORMANCE & SCALING
# ───────────────────────────────────────────────────────────────────────────

MAX_WORKERS=4
WORKER_TIMEOUT=120
KEEPALIVE_TIMEOUT=65

# Caching
ENABLE_CACHING=true
CACHE_TTL=300

# Database
ENABLE_PERSISTENCE=true
DB_BACKUP_ENABLED=true
DB_BACKUP_INTERVAL=3600

# Distributed mode
ENABLE_DISTRIBUTED_MODE=false
ENABLE_LOAD_BALANCING=false

# ───────────────────────────────────────────────────────────────────────────
# ALERTING & MAINTENANCE
# ───────────────────────────────────────────────────────────────────────────

# Alert Configuration
ENABLE_ALERTING=false
ENABLE_METRICS=true
ALERT_WEBHOOK_URL=
ALERT_EMAIL=

# Maintenance
ENABLE_AUTO_RESTART=true
ENABLE_AUTO_UPDATE=false
MAINTENANCE_WINDOW=02:00-04:00

# ───────────────────────────────────────────────────────────────────────────
# FEATURE FLAGS
# ───────────────────────────────────────────────────────────────────────────

# Core services
ENABLE_NEUROMODULATION=true
ENABLE_MEMORY_CONSOLIDATION=true
ENABLE_HSAS=true
ENABLE_STRATEGIC_PLANNING=true
ENABLE_IMMUNIS=true

# Experimental features (use with caution)
ENABLE_QUANTUM_DEFENSE=false
ENABLE_PREDICTIVE_IMMUNITY=false
ENABLE_AUTO_REMEDIATION=false

# Development Only (disable in production)
ENABLE_DEBUG_ENDPOINTS=false
ENABLE_PROFILING=false

# ═══════════════════════════════════════════════════════════════════════════
# END OF CONFIGURATION
# ═══════════════════════════════════════════════════════════════════════════
#
# For more information, visit: https://vertice-maximus.web.app/docs
# Support: https://discord.gg/vertice-maximus
#
# ═══════════════════════════════════════════════════════════════════════════
