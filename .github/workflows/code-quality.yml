name: Code Quality

on:
  push:
    branches: [main, development, feature/*, validation/*]
  pull_request:
    branches: [main, development]

jobs:
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy bandit
          pip install -r requirements.txt || true
      
      - name: Check formatting with Black
        run: |
          black --check --diff backend/
        continue-on-error: false
      
      - name: Check imports with isort
        run: |
          isort --check-only --diff backend/
        continue-on-error: false
      
      - name: Lint with Flake8
        run: |
          flake8 backend/ --statistics --count
        continue-on-error: false
      
      - name: Type check with mypy
        run: |
          mypy backend/ --config-file=pyproject.toml
        continue-on-error: true  # Non-blocking for now
      
      - name: Security scan with Bandit
        run: |
          bandit -c pyproject.toml -r backend/ -ll
        continue-on-error: true  # Non-blocking for now
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '‚ùå Code quality checks failed. Please run `./scripts/maintenance/format-and-lint.sh fix` locally and push changes.'
            })

  pre-commit:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install pre-commit
        run: pip install pre-commit
      
      - name: Run pre-commit
        run: pre-commit run --all-files
        continue-on-error: false
