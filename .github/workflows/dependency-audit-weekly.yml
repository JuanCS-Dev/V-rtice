name: Weekly Dependency Audit

# This workflow runs comprehensive dependency audits weekly
# and creates issues for any vulnerabilities or expired whitelists found

on:
  schedule:
    # Every Monday at 09:00 UTC
    - cron: '0 9 * * 1'

  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  audit-active-immune-core:
    name: Audit Active Immune Core
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install audit tools
        run: |
          pip install --upgrade pip
          pip install safety pip-audit pip-tools pyyaml

      - name: Run dependency audit
        id: audit
        working-directory: backend/services/active_immune_core
        continue-on-error: true
        run: |
          bash scripts/dependency-audit.sh

      - name: Check whitelist expiration
        id: whitelist
        working-directory: backend/services/active_immune_core
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bash scripts/audit-whitelist-expiration.sh

      - name: Create issue on audit failure
        if: steps.audit.outcome == 'failure'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create \
            --title "‚ö†Ô∏è Weekly Dependency Audit Failed - Active Immune Core" \
            --body "**Date**: $(date '+%Y-%m-%d %H:%M:%S UTC')
          **Service**: Active Immune Core
          **Workflow**: [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ## Summary

          The weekly dependency audit detected vulnerabilities.

          ## Actions Required

          1. Review the workflow run logs above
          2. Identify affected packages
          3. Update packages in \`requirements.txt\`
          4. Regenerate lock file: \`pip-compile requirements.txt --output-file requirements.txt.lock\`
          5. Run audit locally: \`bash scripts/dependency-audit.sh\`
          6. If vulnerabilities cannot be fixed immediately, whitelist with justification (see DEPENDENCY_POLICY.md)

          ## References

          - [DEPENDENCY_POLICY.md](../blob/main/backend/services/active_immune_core/DEPENDENCY_POLICY.md)
          - [Dependency Audit Script](../blob/main/backend/services/active_immune_core/scripts/dependency-audit.sh)

          ---
          Auto-generated by Weekly Dependency Audit workflow" \
            --label "security,dependencies,audit-failed" \
            --assignee security-team

      - name: Create issue on whitelist expiration
        if: steps.whitelist.outcome == 'failure'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create \
            --title "üïí CVE Whitelist Expiration - Active Immune Core" \
            --body "**Date**: $(date '+%Y-%m-%d %H:%M:%S UTC')
          **Service**: Active Immune Core
          **Workflow**: [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ## Summary

          One or more whitelisted CVEs have expired or are expiring soon.

          ## Actions Required

          1. Review \`.cve-whitelist.yml\`
          2. For each expired CVE:
             - **Option A**: Update package to patched version
             - **Option B**: Extend whitelist with renewed justification
             - **Option C**: Remove whitelist if no longer valid
          3. Run whitelist audit: \`bash scripts/audit-whitelist-expiration.sh\`

          See workflow logs for specific CVEs requiring action.

          ## References

          - [DEPENDENCY_POLICY.md ¬ß CVE Whitelist Process](../blob/main/backend/services/active_immune_core/DEPENDENCY_POLICY.md#cve-whitelist-process)
          - [.cve-whitelist.yml](../blob/main/backend/services/active_immune_core/.cve-whitelist.yml)

          ---
          Auto-generated by Weekly Dependency Audit workflow" \
            --label "security,dependencies,whitelist-expired" \
            --assignee security-team

  # Add more jobs here for other services
  # audit-maximus-core:
  #   name: Audit Maximus Core
  #   runs-on: ubuntu-latest
  #   steps: ...

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [audit-active-immune-core]
    if: success()

    steps:
      - name: Post success comment
        run: |
          echo "‚úÖ Weekly dependency audit completed successfully"
          echo "All services are secure with no known vulnerabilities"

  notify-failure:
    name: Notify Failure
    runs-on: ubuntu-latest
    needs: [audit-active-immune-core]
    if: failure()

    steps:
      - name: Post failure summary
        run: |
          echo "‚ùå Weekly dependency audit detected issues"
          echo "Issues have been created automatically"
          echo "Security team has been notified"
