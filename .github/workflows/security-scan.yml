name: 🔒 Security - Dependency Vulnerability Scan

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  python-security:
    name: 🐍 Python Dependencies (Safety)
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety pipenv
      
      - name: 🔍 Run Safety check
        id: safety
        continue-on-error: true
        run: |
          echo "## 🐍 Python Dependencies Security Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Run safety check
          safety check --json > safety-report.json || true
          
          # Parse and display results
          if [ -s safety-report.json ]; then
            VULN_COUNT=$(jq '. | length' safety-report.json)
            echo "**Vulnerabilities found**: $VULN_COUNT" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ "$VULN_COUNT" -gt 0 ]; then
              echo "### ⚠️ Critical Vulnerabilities:" >> $GITHUB_STEP_SUMMARY
              jq -r '.[] | "- **\(.package)** \(.installed_version) → \(.vulnerable_spec)\n  - CVE: \(.cve // "N/A")\n  - Severity: \(.severity // "UNKNOWN")\n  - Fix: Upgrade to \(.vulnerable_spec)"' safety-report.json >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ No vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "✅ No vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: 📤 Upload Safety report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-security-report
          path: safety-report.json
          retention-days: 30
      
      - name: ❌ Fail on critical vulnerabilities
        if: steps.safety.outcome == 'failure'
        run: |
          echo "::error::Critical vulnerabilities found in Python dependencies!"
          exit 1

  npm-security:
    name: 📦 NPM Dependencies (npm audit)
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: 📦 Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: 🔍 Run npm audit
        id: npm-audit
        working-directory: ./frontend
        continue-on-error: true
        run: |
          echo "## 📦 NPM Dependencies Security Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Run npm audit
          npm audit --json > npm-audit-report.json || true
          
          # Parse results
          if [ -s npm-audit-report.json ]; then
            CRITICAL=$(jq '.metadata.vulnerabilities.critical // 0' npm-audit-report.json)
            HIGH=$(jq '.metadata.vulnerabilities.high // 0' npm-audit-report.json)
            MODERATE=$(jq '.metadata.vulnerabilities.moderate // 0' npm-audit-report.json)
            LOW=$(jq '.metadata.vulnerabilities.low // 0' npm-audit-report.json)
            
            echo "**Vulnerabilities Summary:**" >> $GITHUB_STEP_SUMMARY
            echo "- 🔴 Critical: $CRITICAL" >> $GITHUB_STEP_SUMMARY
            echo "- 🟠 High: $HIGH" >> $GITHUB_STEP_SUMMARY
            echo "- 🟡 Moderate: $MODERATE" >> $GITHUB_STEP_SUMMARY
            echo "- 🟢 Low: $LOW" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            TOTAL=$((CRITICAL + HIGH + MODERATE + LOW))
            if [ "$TOTAL" -gt 0 ]; then
              echo "⚠️ **Total vulnerabilities**: $TOTAL" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Run \`npm audit fix\` to automatically fix issues." >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ No vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
            fi
          fi
      
      - name: 📤 Upload npm audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-security-report
          path: frontend/npm-audit-report.json
          retention-days: 30
      
      - name: ❌ Fail on critical/high vulnerabilities
        if: steps.npm-audit.outcome == 'failure'
        run: |
          CRITICAL=$(jq '.metadata.vulnerabilities.critical // 0' frontend/npm-audit-report.json)
          HIGH=$(jq '.metadata.vulnerabilities.high // 0' frontend/npm-audit-report.json)
          
          if [ "$CRITICAL" -gt 0 ] || [ "$HIGH" -gt 0 ]; then
            echo "::error::Critical or high severity vulnerabilities found in NPM dependencies!"
            exit 1
          fi

  container-security:
    name: 🐳 Container Images (Trivy)
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: 📤 Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: 📤 Upload Trivy report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-security-report
          path: trivy-results.sarif
          retention-days: 30

  summary:
    name: 📊 Security Summary
    runs-on: ubuntu-latest
    needs: [python-security, npm-security, container-security]
    if: always()
    
    steps:
      - name: 📊 Generate summary
        run: |
          echo "## 🔒 Security Scan Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All dependency vulnerability scans have completed." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scanned:**" >> $GITHUB_STEP_SUMMARY
          echo "- 🐍 Python dependencies (Safety)" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 NPM dependencies (npm audit)" >> $GITHUB_STEP_SUMMARY
          echo "- 🐳 Container images (Trivy)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check individual job outputs for details." >> $GITHUB_STEP_SUMMARY
