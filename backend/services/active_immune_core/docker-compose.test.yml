# ============================================================================
# ACTIVE IMMUNE CORE - TEST ENVIRONMENT
# ============================================================================
#
# Minimal Docker Compose stack for running integration tests.
#
# Includes:
# - Kafka (KRaft mode - no Zookeeper needed)
# - Redis
# - PostgreSQL
#
# Usage:
#   Start:  docker-compose -f docker-compose.test.yml up -d
#   Stop:   docker-compose -f docker-compose.test.yml down -v
#   Logs:   docker-compose -f docker-compose.test.yml logs -f
#
# NO MOCKS, NO PLACEHOLDERS, NO TODOS - Production-grade test infrastructure.
#
# Authors: Juan & Claude
# Version: 1.0.0
# ============================================================================

version: '3.8'

services:
  # ==========================================================================
  # KAFKA (KRaft mode - single broker for testing)
  # ==========================================================================
  kafka-test:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka-test
    container_name: active-immune-kafka-test
    ports:
      - "9092:9092"
    environment:
      # KRaft configuration (no Zookeeper)
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-test:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      
      # Listeners
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,CONTROLLER://kafka-test:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      
      # Replication (single broker)
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      
      # Performance tuning for tests
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      
      # Storage
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
    
    networks:
      - test-network

  # ==========================================================================
  # REDIS (for hormonal signaling and state management)
  # ==========================================================================
  redis-test:
    image: redis:7-alpine
    container_name: active-immune-redis-test
    ports:
      - "6379:6379"
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s
    
    volumes:
      - redis-test-data:/data
    
    networks:
      - test-network

  # ==========================================================================
  # POSTGRESQL (for memory persistence)
  # ==========================================================================
  postgres-test:
    image: postgres:15-alpine
    container_name: active-immune-postgres-test
    environment:
      POSTGRES_DB: immunis_memory_test
      POSTGRES_USER: immune_user
      POSTGRES_PASSWORD: immune_pass_test
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    
    ports:
      - "5432:5432"
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U immune_user -d immunis_memory_test"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
    
    networks:
      - test-network

# ============================================================================
# VOLUMES (for data persistence during test sessions)
# ============================================================================
volumes:
  redis-test-data:
    name: active-immune-redis-test-data
  
  postgres-test-data:
    name: active-immune-postgres-test-data

# ============================================================================
# NETWORKS
# ============================================================================
networks:
  test-network:
    name: active-immune-test-network
    driver: bridge
