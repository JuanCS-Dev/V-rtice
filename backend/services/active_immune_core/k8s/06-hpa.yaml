# Kubernetes HorizontalPodAutoscaler for Active Immune Core
# Auto-scaling based on CPU and memory metrics
#
# Prerequisites: metrics-server must be installed
# Install: kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
#
# Apply: kubectl apply -f k8s/06-hpa.yaml -n active-immune
# Check: kubectl get hpa -n active-immune
# Describe: kubectl describe hpa active-immune-core-hpa -n active-immune
#
# NO MOCKS, NO PLACEHOLDERS, NO TODOS - Production-ready.

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: active-immune-core-hpa
  namespace: active-immune
  labels:
    app: active-immune-core
    component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: active-immune-core
  minReplicas: 3
  maxReplicas: 10
  metrics:
    # CPU-based scaling
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70  # Scale up when CPU > 70%

    # Memory-based scaling
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80  # Scale up when memory > 80%

  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60  # Wait 60s before scaling up
      policies:
        - type: Percent
          value: 50  # Scale up by 50% of current replicas
          periodSeconds: 60
        - type: Pods
          value: 2  # Or add 2 pods at a time (whichever is smaller)
          periodSeconds: 60
      selectPolicy: Max  # Use the policy that scales faster

    scaleDown:
      stabilizationWindowSeconds: 300  # Wait 5 minutes before scaling down
      policies:
        - type: Percent
          value: 25  # Scale down by 25% of current replicas
          periodSeconds: 60
        - type: Pods
          value: 1  # Or remove 1 pod at a time (whichever is smaller)
          periodSeconds: 60
      selectPolicy: Min  # Use the policy that scales slower (more conservative)
