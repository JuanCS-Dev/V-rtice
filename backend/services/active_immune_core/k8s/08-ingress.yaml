# Kubernetes Ingress for Active Immune Core (OPTIONAL)
# External HTTPS access with TLS termination
#
# Prerequisites:
# - Ingress controller (nginx, traefik, etc.)
# - TLS certificate (cert-manager recommended)
#
# Apply: kubectl apply -f k8s/08-ingress.yaml -n active-immune
# Check: kubectl get ingress -n active-immune
# Describe: kubectl describe ingress active-immune-core-ingress -n active-immune
#
# NOTE: This is typically NOT needed for Active Immune Core
#       since it should be accessed through the API Gateway internally.
#       Only use this if you need direct external access for debugging.
#
# NO MOCKS, NO PLACEHOLDERS, NO TODOS - Production-ready.

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: active-immune-core-ingress
  namespace: active-immune
  labels:
    app: active-immune-core
    component: ingress
  annotations:
    # Nginx ingress annotations
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rate-limit: "100"  # 100 req/sec per IP
    nginx.ingress.kubernetes.io/limit-rps: "100"

    # CORS support
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";

    # Cert-manager annotation (if using cert-manager for TLS)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  ingressClassName: nginx

  # TLS configuration
  tls:
    - hosts:
        - immune.vertice.example.com
      secretName: active-immune-tls

  # Routing rules
  rules:
    - host: immune.vertice.example.com
      http:
        paths:
          # Health check endpoint
          - path: /health
            pathType: Exact
            backend:
              service:
                name: active-immune-core
                port:
                  number: 8200

          # Metrics endpoint (restrict in production!)
          - path: /metrics
            pathType: Exact
            backend:
              service:
                name: active-immune-core
                port:
                  number: 8200

          # API endpoints
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: active-immune-core
                port:
                  number: 8200

          # All other paths
          - path: /
            pathType: Prefix
            backend:
              service:
                name: active-immune-core
                port:
                  number: 8200
