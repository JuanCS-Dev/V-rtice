version: "3.8"

services:
  maba:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vertice-maba
    hostname: vertice-maba
    ports:
      - "8152:8152" # Main service port
      - "9092:9090" # Prometheus metrics
    environment:
      - SERVICE_NAME=maba
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8152
      - SERVICE_VERSION=1.0.0
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO

      # MAXIMUS Integration
      - MAXIMUS_ENDPOINT=http://vertice-maximus-core-service:8150

      # Service Registry
      - VERTICE_REGISTRY_URL=http://vertice-register-lb:80
      - VERTICE_REGISTRY_TOKEN=titanium-registry-token
      - REGISTRY_HEARTBEAT_INTERVAL=30

      # Database
      - POSTGRES_HOST=vertice-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=vertice
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DATABASE_URL=postgresql://postgres:postgres@vertice-postgres:5432/vertice

      # Redis
      - REDIS_HOST=vertice-redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://vertice-redis:6379

      # Neo4j (Cognitive Map)
      - NEO4J_URI=bolt://vertice-neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=vertice-neo4j-password
      - NEO4J_DATABASE=maba_cognitive_map

      # Anthropic API
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}

      # Browser Configuration
      - BROWSER_TYPE=chromium
      - BROWSER_HEADLESS=true
      - BROWSER_TIMEOUT=30000
      - MAX_BROWSER_INSTANCES=5
      - BROWSER_POOL_SIZE=3

      # Cognitive Map
      - COGNITIVE_MAP_MAX_PAGES=10000
      - MAX_DOM_ELEMENTS=500
      - LEARNING_RATE=0.01

      # Metrics
      - METRICS_PORT=9090

      # Performance
      - REQUEST_TIMEOUT=300
      - WORKER_PROCESSES=1

    volumes:
      - maba-screenshots:/app/screenshots
      - maba-logs:/app/logs

    networks:
      - maximus-network
      - vertice-network

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8152/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    depends_on:
      - vertice-redis
      - vertice-postgres
      - vertice-neo4j

    # Resource limits (browser automation is resource-intensive)
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 4G
        reservations:
          cpus: "1.0"
          memory: 2G

  maba-sidecar:
    image: vertice-registry-sidecar:latest
    container_name: vertice-maba-sidecar
    environment:
      - SERVICE_NAME=maba
      - SERVICE_HOST=vertice-maba
      - SERVICE_PORT=8152
      - SERVICE_HEALTH_ENDPOINT=/health
      - REGISTRY_URL=http://vertice-register-lb:80
      - HEARTBEAT_INTERVAL=30
      - INITIAL_WAIT_TIMEOUT=60
    depends_on:
      maba:
        condition: service_started
    networks:
      - vertice-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 64M

  # Neo4j for Cognitive Map (optional - can use existing Neo4j)
  vertice-neo4j:
    image: neo4j:5.28-community
    container_name: vertice-neo4j
    hostname: vertice-neo4j
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    environment:
      - NEO4J_AUTH=neo4j/vertice-neo4j-password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    networks:
      - vertice-network
    restart: unless-stopped

networks:
  maximus-network:
    external: true
  vertice-network:
    external: true

volumes:
  maba-screenshots:
  maba-logs:
  neo4j-data:
  neo4j-logs:
