# Pre-commit hooks for MAXIMUS AI 3.0
# Ensures code quality and coverage before commits
# Author: Claude Code + JuanCS-Dev
# Date: 2025-10-20

repos:
  # Python code formatters
  - repo: https://github.com/psf/black
    rev: 23.10.0
    hooks:
      - id: black
        language_version: python3.11

  # Import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  # Flake8 linting
  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [
          "--max-line-length=120",
          "--extend-ignore=E203,W503"
        ]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.6.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: ["--ignore-missing-imports", "--no-strict-optional"]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]

  # YAML validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: detect-private-key

  # Custom: Coverage Delta Check
  - repo: local
    hooks:
      - id: coverage-delta
        name: Coverage Delta Check
        entry: bash -c 'python scripts/coverage_report.py --current htmlcov --baseline htmlcov_baseline --fail-under 70 || true'
        language: system
        pass_filenames: false
        always_run: false  # Only run when explicitly enabled

      - id: pytest-fast
        name: Fast Unit Tests
        entry: bash -c 'pytest tests/unit -v -m "unit and not slow" --tb=short'
        language: system
        pass_filenames: false
        types: [python]
        stages: [commit]

      - id: no-breakpoints
        name: Check for breakpoints
        entry: bash -c 'grep -rn "breakpoint()" --include="*.py" . && exit 1 || exit 0'
        language: system
        pass_filenames: false

      - id: no-print-statements
        name: Check for print statements (warn only)
        entry: bash -c 'grep -rn "print(" --include="*.py" . --exclude-dir=tests --exclude-dir=scripts || exit 0'
        language: system
        pass_filenames: false
        verbose: true
