[tool.poetry]
name = "motor-integridade-processual"
version = "1.0.0"
description = "Motor de Integridade Processual para MAXIMUS - Ethical Supervision System"
authors = ["Juan Carlos de Souza <juan@vertice.ai>"]
license = "Proprietary"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.5"
fastapi = "^0.109"
uvicorn = {extras = ["standard"], version = "^0.27"}
orjson = "^3.9"
numpy = "^1.26"
scipy = "^1.12"
neo4j = "^5.16"
sentence-transformers = "^2.3"
prometheus-client = "^0.19"
structlog = "^24.1"
python-multipart = "^0.0.6"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
pytest-cov = "^4.1"
pytest-asyncio = "^0.23"
hypothesis = "^6.98"
mypy = "^1.8"
pylint = "^3.0"
black = "^24.1"
bandit = "^1.7"
types-orjson = "^3.6"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[tool.pylint.messages_control]
max-line-length = 120
disable = ["too-few-public-methods", "too-many-instance-attributes"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "--cov=motor_integridade_processual --cov-report=term-missing --cov-fail-under=95 -v"

[tool.black]
line-length = 120
target-version = ['py311']

[tool.bandit]
exclude_dirs = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
