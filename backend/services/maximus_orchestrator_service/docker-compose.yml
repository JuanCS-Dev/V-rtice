version: '3.8'

services:
  maximus_orchestrator_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vertice-maximus-orchestrator-service
    hostname: vertice-maximus-orchestrator-service
    ports:
      - "8125:8016"
    environment:
      - SERVICE_NAME=maximus_orchestrator_service
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8016
      - LOG_LEVEL=INFO
      - ENVIRONMENT=development
      - REDIS_URL=redis://vertice-redis:6379
      - POSTGRES_URL=postgresql://postgres:postgres@vertice-postgres:5432/vertice
    networks:
      - maximus-ai-network
      - maximus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8016/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - vertice-redis
      - vertice-postgres

  maximus_orchestrator_service-sidecar:
    image: vertice-registry-sidecar:latest
    container_name: vertice-maximus-orchestrator-service-sidecar
    environment:
      - SERVICE_NAME=maximus_orchestrator_service
      - SERVICE_HOST=vertice-maximus-orchestrator-service
      - SERVICE_PORT=8016
      - SERVICE_HEALTH_ENDPOINT=/health
      - REGISTRY_URL=http://vertice-register-lb:80
      - HEARTBEAT_INTERVAL=30
      - INITIAL_WAIT_TIMEOUT=60
    depends_on:
      maximus_orchestrator_service:
        condition: service_started
    networks:
      - maximus-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M

networks:
  maximus-ai-network:
    external: true
  maximus-network:
    external: true
