version: "3.8"

services:
  mvp_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vertice-mvp-service
    hostname: vertice-mvp-service
    ports:
      - "8153:8153"
      - "9093:9090"
    environment:
      - SERVICE_NAME=mvp_service
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8153
      - SERVICE_VERSION=1.0.0
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO

      # MAXIMUS Integration
      - MAXIMUS_ENDPOINT=http://vertice-maximus-core-service:8150

      # Service Registry
      - VERTICE_REGISTRY_URL=http://vertice-register-lb:80
      - VERTICE_REGISTRY_TOKEN=titanium-registry-token
      - REGISTRY_HEARTBEAT_INTERVAL=30

      # Database
      - POSTGRES_HOST=vertice-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=vertice
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DATABASE_URL=postgresql://postgres:postgres@vertice-postgres:5432/vertice

      # Redis (for caching)
      - REDIS_HOST=vertice-redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://vertice-redis:6379

      # Anthropic API (LLM for narrative generation)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - LLM_MODEL=claude-sonnet-4
      - LLM_MAX_TOKENS=2000
      - LLM_TEMPERATURE=0.7

      # ElevenLabs API (TTS for audio synthesis)
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - TTS_VOICE_ID=marcus
      - TTS_MODEL=eleven_multilingual_v2
      - TTS_OPTIMIZE_STREAMING_LATENCY=3

      # Azure Blob Storage (audio storage)
      - AZURE_STORAGE_ACCOUNT=${AZURE_STORAGE_ACCOUNT}
      - AZURE_STORAGE_KEY=${AZURE_STORAGE_KEY}
      - AZURE_STORAGE_CONTAINER=mvp-audio-narratives

      # MVP Configuration
      - NARRATIVE_TARGET_DURATION=30
      - NARRATIVE_WORD_COUNT_TARGET=250
      - MIN_NQS_SCORE=85
      - MIN_AQS_SCORE=90
      - ENABLE_AUDIO_CACHE=true
      - MAX_COST_PER_NARRATIVE_USD=0.50

      # Content Moderation
      - ENABLE_PII_DETECTION=true
      - ENABLE_PROFANITY_FILTER=true
      - ENABLE_LGPD_COMPLIANCE=true

      # Metrics
      - METRICS_PORT=9090

      # Performance
      - REQUEST_TIMEOUT=120
      - WORKER_PROCESSES=1

    volumes:
      - mvp-cache:/app/cache
      - mvp-logs:/app/logs

    networks:
      - maximus-network
      - vertice-network

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8153/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    depends_on:
      - vertice-redis
      - vertice-postgres

    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.25"
          memory: 256M

  mvp_service-sidecar:
    image: vertice-registry-sidecar:latest
    container_name: vertice-mvp-service-sidecar
    environment:
      - SERVICE_NAME=mvp_service
      - SERVICE_HOST=vertice-mvp-service
      - SERVICE_PORT=8153
      - SERVICE_HEALTH_ENDPOINT=/health
      - REGISTRY_URL=http://vertice-register-lb:80
      - HEARTBEAT_INTERVAL=30
      - INITIAL_WAIT_TIMEOUT=60
    depends_on:
      mvp_service:
        condition: service_started
    networks:
      - vertice-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 64M

networks:
  maximus-network:
    external: true
  vertice-network:
    external: true

volumes:
  mvp-cache:
  mvp-logs:
