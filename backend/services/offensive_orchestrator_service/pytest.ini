[pytest]
# Pytest configuration for Offensive Orchestrator Service

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts =
    -v
    --tb=short
    --disable-warnings
    --color=yes
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=92

# Coverage configuration
[coverage:run]
source = .
omit =
    tests/*
    */__pycache__/*
    */site-packages/*
    setup.py
    venv/*
    .venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

# Exclude lines from coverage
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require external services)
    slow: Slow tests (>1s)
    llm: Tests requiring LLM API calls
    db: Tests requiring database
    vector: Tests requiring Qdrant
