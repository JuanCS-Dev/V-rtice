version: '3.8'
networks:
  maximus-network:
    external: true
services:
  test-service:
    build: .
    container_name: vertice-test-service
    hostname: vertice-test-service
    ports:
    - 9999:8080
    networks:
    - maximus-network
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - python
      - -c
      - import urllib.request; urllib.request.urlopen('http://localhost:8080/health')
      interval: 10s
      timeout: 3s
      retries: 3
  test-service-sidecar:
    image: vertice-registry-sidecar:latest
    container_name: vertice-test-service-sidecar
    environment:
    - SERVICE_NAME=test_service
    - SERVICE_HOST=vertice-test-service
    - SERVICE_PORT=8080
    - REGISTRY_URL=http://vertice-register-lb:80
    - HEARTBEAT_INTERVAL=30
    depends_on:
      test-service:
        condition: service_started
    networks:
    - maximus-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
  test_service_for_sidecar-sidecar:
    image: vertice-registry-sidecar:latest
    container_name: vertice-test-service-for-sidecar-sidecar
    environment:
    - SERVICE_NAME=test_service_for_sidecar_service
    - SERVICE_HOST=vertice-test-service
    - SERVICE_PORT=8080
    - SERVICE_HEALTH_ENDPOINT=/health
    - REGISTRY_URL=http://vertice-register-lb:80
    - HEARTBEAT_INTERVAL=30
    - INITIAL_WAIT_TIMEOUT=60
    networks:
    - maximus-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
