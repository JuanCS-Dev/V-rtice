version: '3.8'

services:
  mip:
    build:
      context: ./backend/consciousness/mip
      dockerfile: Dockerfile
    container_name: maximus_mip
    ports:
      - "8100:8100"
    environment:
      - SERVICE_NAME=mip
      - SERVICE_VERSION=1.0.0
      - LOG_LEVEL=INFO
      - NEO4J_URI=bolt://neo4j-mip:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=maximus2025
      - NEO4J_DATABASE=neo4j
      - API_PREFIX=/api/v1
      - CORS_ORIGINS=["*"]
    depends_on:
      neo4j-mip:
        condition: service_healthy
    networks:
      - mip-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  neo4j-mip:
    image: neo4j:5.16
    container_name: maximus_neo4j_mip
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/maximus2025
      - NEO4J_PLUGINS=["apoc","graph-data-science"]
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
    volumes:
      - neo4j_mip_data:/data
      - neo4j_mip_logs:/logs
    networks:
      - mip-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  mip-network:
    driver: bridge

volumes:
  neo4j_mip_data:
    driver: local
  neo4j_mip_logs:
    driver: local
