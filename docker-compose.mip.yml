version: '3.8'

services:
  mip:
    build:
      context: ./backend/services/maximus_core_service/motor_integridade_processual
      dockerfile: Dockerfile
    container_name: maximus_mip
    ports:
      - "8100:8000"
    environment:
      - NEO4J_URI=bolt://neo4j-mip:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=maximus2025
      - LOG_LEVEL=INFO
    depends_on:
      - neo4j-mip
      - prometheus-mip
    networks:
      - maximus-network
    restart: unless-stopped

  neo4j-mip:
    image: neo4j:5.16
    container_name: maximus_neo4j_mip
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/maximus2025
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - neo4j_mip_data:/data
      - neo4j_mip_logs:/logs
    networks:
      - maximus-network
    restart: unless-stopped

  prometheus-mip:
    image: prom/prometheus:v2.49
    container_name: maximus_prometheus_mip
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus-mip.yml:/etc/prometheus/prometheus.yml
      - prometheus_mip_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - maximus-network
    restart: unless-stopped

networks:
  maximus-network:
    driver: bridge

volumes:
  neo4j_mip_data:
  neo4j_mip_logs:
  prometheus_mip_data:
