# /home/juan/vertice-dev/docker-compose.yml

services:
  # ============================
  # API GATEWAY
  # ============================
  api_gateway:
    build: ./backend/api_gateway
    container_name: vertice-api-gateway
    ports:
      - "8000:8000"
    volumes:
      - ./backend/api_gateway:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - SINESP_SERVICE_URL=http://sinesp_service:80
      - CYBER_SERVICE_URL=http://cyber_service:80
      - DOMAIN_SERVICE_URL=http://domain_service:80
      - IP_INTELLIGENCE_SERVICE_URL=http://ip_intelligence_service:80
      - NETWORK_MONITOR_SERVICE_URL=http://network_monitor_service:80
      - NMAP_SERVICE_URL=http://nmap_service:80
      - OSINT_SERVICE_URL=http://osint-service:8007
      - AURORA_PREDICT_URL=http://aurora_predict:80
      - ATLAS_SERVICE_URL=http://atlas_service:8000 # <-- ADICIONADO
      - AUTH_SERVICE_URL=http://auth_service:80
      - VULN_SCANNER_SERVICE_URL=http://vuln_scanner_service:80
      - SOCIAL_ENG_SERVICE_URL=http://social_eng_service:80
      - THREAT_INTEL_SERVICE_URL=http://threat_intel_service:80
      - MALWARE_ANALYSIS_SERVICE_URL=http://malware_analysis_service:80
      - SSL_MONITOR_SERVICE_URL=http://ssl_monitor_service:80
      - AURORA_ORCHESTRATOR_URL=http://aurora_orchestrator_service:80
      - AI_AGENT_SERVICE_URL=http://ai_agent_service:80
    depends_on:
      - redis
      - sinesp_service
      - cyber_service
      - domain_service
      - ip_intelligence_service
      - network_monitor_service
      - nmap_service
      - osint-service
      - aurora_predict
      - auth_service
      - atlas_service # <-- ADICIONADO
      - vuln_scanner_service
      - social_eng_service
      - threat_intel_service
      - malware_analysis_service
      - ssl_monitor_service
      - aurora_orchestrator_service
    networks:
      - vertice-network
    restart: unless-stopped

  # ============================
  # REDIS CACHE
  # ============================
  redis:
    image: "redis:alpine"
    container_name: vertice-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - vertice-network
    restart: unless-stopped

  # ... (todos os outros serviÃ§os permanecem iguais) ...
  
  sinesp_service:
    build: ./backend/services/sinesp_service
    container_name: vertice-sinesp
    ports:
      - "8001:80"
    volumes:
      - ./backend/services/sinesp_service:/code
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    networks:
      - vertice-network
    restart: unless-stopped

  cyber_service:
    build: ./backend/services/cyber_service
    container_name: vertice-cyber
    volumes:
      - ./backend/services/cyber_service:/app
      - /var/log:/var/log:ro
      - /etc:/etc:ro
    privileged: true
    ports:
      - "8002:80"
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    networks:
      - vertice-network
    restart: unless-stopped

  domain_service:
    build: ./backend/services/domain_service
    container_name: vertice-domain
    volumes:
      - ./backend/services/domain_service:/app
    ports:
      - "8003:80"
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    networks:
      - vertice-network
    restart: unless-stopped

  ip_intelligence_service:
    build: ./backend/services/ip_intelligence_service
    container_name: vertice-ip-intel
    volumes:
      - ./backend/services/ip_intelligence_service:/app
    ports:
      - "8004:80"
    environment:
      - CACHE_TTL_SECONDS=86400
    command: uvicorn main:app --host 0.0.0.0 --port 80
    networks:
      - vertice-network
    restart: unless-stopped

  network_monitor_service:
    build: ./backend/services/network_monitor_service
    container_name: vertice-network-monitor
    volumes:
      - ./backend/services/network_monitor_service:/app
    ports:
      - "8005:80"
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    cap_add:
      - NET_ADMIN
      - NET_RAW
    networks:
      - vertice-network
    restart: unless-stopped

  nmap_service:
    build: ./backend/services/nmap_service
    container_name: vertice-nmap
    volumes:
      - ./backend/services/nmap_service:/app
    ports:
      - "8006:80"
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    cap_add:
      - NET_ADMIN
      - NET_RAW
    networks:
      - vertice-network
    restart: unless-stopped

  osint-service:
    build: ./backend/services/osint_service
    container_name: vertice-osint
    ports:
      - "8007:8007"
    environment:
      - REDIS_HOST=redis
      - AURORA_HOST=aurora_predict
      - PYTHONUNBUFFERED=1
      - CHROME_BIN=/usr/bin/chromium
      - CHROMEDRIVER_PATH=/usr/bin/chromedriver
    depends_on:
      - redis
      - aurora_predict
    volumes:
      - ./backend/services/osint_service:/app
      - osint-data:/app/data
    command: uvicorn main:app --host 0.0.0.0 --port 8007 --reload
    networks:
      - vertice-network
    restart: unless-stopped

  aurora_predict:
    build: ./backend/services/aurora_predict
    container_name: vertice-aurora
    volumes:
      - ./backend/services/aurora_predict:/code
      - aurora-models:/models
    ports:
      - "8008:80"
    environment:
      - MODEL_PATH=/models
      - PYTHONUNBUFFERED=1
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    networks:
      - vertice-network
    restart: unless-stopped

  # ============================
  # ATLAS SERVICE (NOVO)
  # ============================
  atlas_service:
    build: ./backend/services/atlas_service
    container_name: vertice-atlas
    volumes:
      - ./backend/services/atlas_service:/app
    ports:
      - "8009:8000" # Expondo numa porta externa livre
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - vertice-network
    restart: unless-stopped

  # ============================
  # AUTH SERVICE
  # ============================
  auth_service:
    build: ./backend/services/auth_service
    container_name: vertice-auth
    volumes:
      - ./backend/services/auth_service:/app
    ports:
      - "8010:80"
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    environment:
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - JWT_SECRET=${JWT_SECRET:-vertice-super-secret-key-2024}
      - REDIS_URL=redis://redis:6379
      - AUTHORIZED_DOMAINS=${AUTHORIZED_DOMAINS:-}
      - AUTHORIZED_EMAILS=${AUTHORIZED_EMAILS:-}
      - ADMIN_EMAILS=${ADMIN_EMAILS:-}
    depends_on:
      - redis
    networks:
      - vertice-network
    restart: unless-stopped

  # ============================
  # VULNERABILITY SCANNER SERVICE
  # ============================
  vuln_scanner_service:
    build: ./backend/services/vuln_scanner_service
    container_name: vertice-vuln-scanner
    volumes:
      - ./backend/services/vuln_scanner_service:/app
    ports:
      - "8011:80"
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    cap_add:
      - NET_ADMIN
      - NET_RAW
    networks:
      - vertice-network
    restart: unless-stopped

  # ============================
  # SOCIAL ENGINEERING SERVICE
  # ============================
  social_eng_service:
    build: ./backend/services/social_eng_service
    container_name: vertice-social-eng
    volumes:
      - ./backend/services/social_eng_service:/app
    ports:
      - "8012:80"
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    networks:
      - vertice-network
    restart: unless-stopped

  # ... (Prometheus e Grafana permanecem iguais) ...

  prometheus:
    image: prom/prometheus:latest
    container_name: vertice-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - vertice-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: vertice-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=vertice2024
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - vertice-network
    restart: unless-stopped

  # ============================
  # NSA-GRADE AURORA AI SERVICES
  # ============================

  threat_intel_service:
    build: ./backend/services/threat_intel_service
    container_name: vertice-threat-intel
    ports:
      - "8013:8013"
    volumes:
      - ./backend/services/threat_intel_service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8013 --reload
    environment:
      - ABUSEIPDB_API_KEY=${ABUSEIPDB_API_KEY}
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - GREYNOISE_API_KEY=${GREYNOISE_API_KEY}
      - OTX_API_KEY=${OTX_API_KEY}
    networks:
      - vertice-network
    restart: unless-stopped

  malware_analysis_service:
    build: ./backend/services/malware_analysis_service
    container_name: vertice-malware-analysis
    ports:
      - "8014:8014"
    volumes:
      - ./backend/services/malware_analysis_service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8014 --reload
    environment:
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - HYBRID_ANALYSIS_API_KEY=${HYBRID_ANALYSIS_API_KEY}
    networks:
      - vertice-network
    restart: unless-stopped

  ssl_monitor_service:
    build: ./backend/services/ssl_monitor_service
    container_name: vertice-ssl-monitor
    ports:
      - "8015:8015"
    volumes:
      - ./backend/services/ssl_monitor_service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8015 --reload
    networks:
      - vertice-network
    restart: unless-stopped

  aurora_orchestrator_service:
    build: ./backend/services/aurora_orchestrator_service
    container_name: vertice-aurora-orchestrator
    ports:
      - "8016:8016"
    volumes:
      - ./backend/services/aurora_orchestrator_service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8016 --reload
    environment:
      - IP_INTEL_SERVICE_URL=http://ip_intelligence_service:80
      - THREAT_INTEL_SERVICE_URL=http://threat_intel_service:80
      - MALWARE_ANALYSIS_SERVICE_URL=http://malware_analysis_service:80
      - SSL_MONITOR_SERVICE_URL=http://ssl_monitor_service:80
      - NMAP_SERVICE_URL=http://nmap_service:80
      - VULN_SCANNER_SERVICE_URL=http://vuln_scanner_service:80
      - SOCIAL_ENG_SERVICE_URL=http://social_eng_service:80
      - DOMAIN_SERVICE_URL=http://domain_service:80
    depends_on:
      - threat_intel_service
      - malware_analysis_service
      - ssl_monitor_service
      - ip_intelligence_service
      - nmap_service
    networks:
      - vertice-network
    restart: unless-stopped

  # ============================
  # AI AGENT SERVICE - THE BRAIN ð§ 
  # ============================
  ai_agent_service:
    build: ./backend/services/ai_agent_service
    container_name: vertice-ai-agent
    ports:
      - "8017:80"
    volumes:
      - ./backend/services/ai_agent_service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    environment:
      - LLM_PROVIDER=${LLM_PROVIDER:-gemini}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - THREAT_INTEL_SERVICE_URL=http://threat_intel_service:80
      - MALWARE_ANALYSIS_SERVICE_URL=http://malware_analysis_service:80
      - SSL_MONITOR_SERVICE_URL=http://ssl_monitor_service:80
      - IP_INTEL_SERVICE_URL=http://ip_intelligence_service:80
      - NMAP_SERVICE_URL=http://nmap_service:80
      - VULN_SCANNER_SERVICE_URL=http://vuln_scanner_service:80
      - DOMAIN_SERVICE_URL=http://domain_service:80
      - AURORA_PREDICT_URL=http://aurora_predict:80
      - OSINT_SERVICE_URL=http://osint-service:8007
    depends_on:
      - threat_intel_service
      - malware_analysis_service
      - ssl_monitor_service
      - ip_intelligence_service
      - nmap_service
      - vuln_scanner_service
      - domain_service
      - aurora_predict
      - osint-service
    networks:
      - vertice-network
    restart: unless-stopped

# ============================
# NETWORKS
# ============================
networks:
  vertice-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ============================
# VOLUMES
# ============================
volumes:
  redis-data:
    driver: local
  osint-data:
    driver: local
  aurora-models:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
