[1m[92m
╔═══════════════════════════════════════════════════════════════════════════════╗
║           BACKEND ABSOLUTE 100% VALIDATION SUITE                              ║
║           Evidence-First Approach - Trust Nothing, Verify Everything          ║
╚═══════════════════════════════════════════════════════════════════════════════╝
[0m

[1mFound 83 services to validate[0m


[94m[1m================================================================================[0m
[94m[1m                         PHASE 1: STRUCTURAL VALIDATION                         [0m
[94m[1m================================================================================[0m

Validating required files and directories for all services...

[1mactive_immune_core[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1madaptive_immune_system[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1madaptive_immunity_db[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1madaptive_immunity_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1madr_core_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1magent_communication[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mai_immune_system[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mapi_gateway[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1matlas_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mauditory_cortex_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mauth_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mautonomous_investigation_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mbas_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mc2_orchestration_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mchemical_sensing_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mcloud_coordinator_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mcyber_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mdigital_thalamus_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mdomain_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1medge_agent_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1methical_audit_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mgoogle_osint_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mhcl_analyzer_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mhcl_executor_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mhcl_kb_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mhcl_monitor_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mhcl_planner_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mhitl_patch_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mhomeostatic_regulation[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mhpc_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mhsas_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mimmunis_api_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mimmunis_bcell_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mimmunis_cytotoxic_t_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mimmunis_dendritic_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mimmunis_helper_t_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mimmunis_macrophage_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mimmunis_neutrophil_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mimmunis_nk_cell_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mimmunis_treg_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mip_intelligence_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmalware_analysis_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmaximus_core_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmaximus_eureka[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmaximus_integration_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmaximus_oraculo[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmaximus_oraculo_v2[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmaximus_orchestrator_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmaximus_predict[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmemory_consolidation_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mmock_vulnerable_apps[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mnarrative_analysis_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mnarrative_manipulation_filter[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mnetwork_monitor_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mnetwork_recon_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mneuromodulation_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mnmap_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1moffensive_gateway[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1moffensive_orchestrator_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1moffensive_tools_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mosint_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mpredictive_threat_hunting_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mprefrontal_cortex_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mpurple_team[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mreactive_fabric_analysis[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mreactive_fabric_core[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mreflex_triage_engine[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mrte_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mseriema_graph[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1msinesp_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1msocial_eng_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1msomatosensory_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mssl_monitor_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mstrategic_planning_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mtataca_ingestion[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mtegumentar_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mthreat_intel_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mvestibular_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mvisual_cortex_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mvuln_intel_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mvuln_scanner_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mwargaming_crisol[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)

[1mweb_attack_service[0m
    ✅ __init__.py (Package initialization)
    ✅ main.py (Service entry point)
    ✅ pyproject.toml (UV configuration)
    ✅ README.md (Documentation)
    ✅ tests/ (Test directory)


[1mStructural Validation: 100.00% pass rate[0m
  Passed: 83/83

[94m[1m================================================================================[0m
[94m[1m                          PHASE 2: UV SYNC VALIDATION                           [0m
[94m[1m================================================================================[0m

Testing UV dependency resolution for all services...

[1mactive_immune_core[0m
    ✅ UV sync successful

[1madaptive_immune_system[0m
    ✅ UV sync successful

[1madaptive_immunity_db[0m
    ✅ UV sync successful

[1madaptive_immunity_service[0m
    ✅ UV sync successful

[1madr_core_service[0m
    ✅ UV sync successful

[1magent_communication[0m
    ✅ UV sync successful

[1mai_immune_system[0m
    ✅ UV sync successful

[1mapi_gateway[0m
    ✅ UV sync successful

[1matlas_service[0m
    ✅ UV sync successful

[1mauditory_cortex_service[0m
    ✅ UV sync successful

[1mauth_service[0m
    ✅ UV sync successful

[1mautonomous_investigation_service[0m
    ✅ UV sync successful

[1mbas_service[0m
    ✅ UV sync successful

[1mc2_orchestration_service[0m
    ✅ UV sync successful

[1mchemical_sensing_service[0m
    ✅ UV sync successful

[1mcloud_coordinator_service[0m
    ✅ UV sync successful

[1mcyber_service[0m
    ✅ UV sync successful

[1mdigital_thalamus_service[0m
    ✅ UV sync successful

[1mdomain_service[0m
    ✅ UV sync successful

[1medge_agent_service[0m
    ✅ UV sync successful

[1methical_audit_service[0m
    ✅ UV sync successful

[1mgoogle_osint_service[0m
    ✅ UV sync successful

[1mhcl_analyzer_service[0m
    ✅ UV sync successful

[1mhcl_executor_service[0m
    ✅ UV sync successful

[1mhcl_kb_service[0m
    ✅ UV sync successful

[1mhcl_monitor_service[0m
    ✅ UV sync successful

[1mhcl_planner_service[0m
    ✅ UV sync successful

[1mhitl_patch_service[0m
    ✅ UV sync successful

[1mhomeostatic_regulation[0m
    ✅ UV sync successful

[1mhpc_service[0m
    ✅ UV sync successful

[1mhsas_service[0m
    ✅ UV sync successful

[1mimmunis_api_service[0m
    ✅ UV sync successful

[1mimmunis_bcell_service[0m
    ✅ UV sync successful

[1mimmunis_cytotoxic_t_service[0m
    ✅ UV sync successful

[1mimmunis_dendritic_service[0m
    ✅ UV sync successful

[1mimmunis_helper_t_service[0m
    ✅ UV sync successful

[1mimmunis_macrophage_service[0m
    ✅ UV sync successful

[1mimmunis_neutrophil_service[0m
    ✅ UV sync successful

[1mimmunis_nk_cell_service[0m
    ✅ UV sync successful

[1mimmunis_treg_service[0m
    ✅ UV sync successful

[1mip_intelligence_service[0m
    ✅ UV sync successful

[1mmalware_analysis_service[0m
    ✅ UV sync successful

[1mmaximus_core_service[0m
    ✅ UV sync successful

[1mmaximus_eureka[0m
    ✅ UV sync successful

[1mmaximus_integration_service[0m
    ✅ UV sync successful

[1mmaximus_oraculo[0m
    ✅ UV sync successful

[1mmaximus_oraculo_v2[0m
    ✅ UV sync successful

[1mmaximus_orchestrator_service[0m
    ✅ UV sync successful

[1mmaximus_predict[0m
    ✅ UV sync successful

[1mmemory_consolidation_service[0m
    ✅ UV sync successful

[1mmock_vulnerable_apps[0m
    ✅ UV sync successful

[1mnarrative_analysis_service[0m
    ✅ UV sync successful

[1mnarrative_manipulation_filter[0m
    ✅ UV sync successful

[1mnetwork_monitor_service[0m
    ✅ UV sync successful

[1mnetwork_recon_service[0m
    ✅ UV sync successful

[1mneuromodulation_service[0m
    ✅ UV sync successful

[1mnmap_service[0m
    ✅ UV sync successful

[1moffensive_gateway[0m
    ✅ UV sync successful

[1moffensive_orchestrator_service[0m
    ✅ UV sync successful

[1moffensive_tools_service[0m
    ✅ UV sync successful

[1mosint_service[0m
    ✅ UV sync successful

[1mpredictive_threat_hunting_service[0m
    ✅ UV sync successful

[1mprefrontal_cortex_service[0m
    ✅ UV sync successful

[1mpurple_team[0m
    ✅ UV sync successful

[1mreactive_fabric_analysis[0m
    ✅ UV sync successful

[1mreactive_fabric_core[0m
    ✅ UV sync successful

[1mreflex_triage_engine[0m
    ✅ UV sync successful

[1mrte_service[0m
    ✅ UV sync successful

[1mseriema_graph[0m
    ✅ UV sync successful

[1msinesp_service[0m
    ✅ UV sync successful

[1msocial_eng_service[0m
    ✅ UV sync successful

[1msomatosensory_service[0m
    ✅ UV sync successful

[1mssl_monitor_service[0m
    ✅ UV sync successful

[1mstrategic_planning_service[0m
    ✅ UV sync successful

[1mtataca_ingestion[0m
    ✅ UV sync successful

[1mtegumentar_service[0m
    ✅ UV sync successful

[1mthreat_intel_service[0m
    ✅ UV sync successful

[1mvestibular_service[0m
    ✅ UV sync successful

[1mvisual_cortex_service[0m
    ✅ UV sync successful

[1mvuln_intel_service[0m
    ✅ UV sync successful

[1mvuln_scanner_service[0m
    ✅ UV sync successful

[1mwargaming_crisol[0m
    ✅ UV sync successful

[1mweb_attack_service[0m
    ✅ UV sync successful


[1mUV Sync Validation: 100.00% pass rate[0m
  Passed: 83/83

[94m[1m================================================================================[0m
[94m[1m                           PHASE 3: IMPORT VALIDATION                           [0m
[94m[1m================================================================================[0m

Validating Python syntax for all main.py files...

[1mactive_immune_core[0m
    ✅ main.py syntax valid

[1madaptive_immune_system[0m
    ✅ main.py syntax valid

[1madaptive_immunity_db[0m
    ✅ main.py syntax valid

[1madaptive_immunity_service[0m
    ✅ main.py syntax valid

[1madr_core_service[0m
    ✅ main.py syntax valid

[1magent_communication[0m
    ✅ main.py syntax valid

[1mai_immune_system[0m
    ✅ main.py syntax valid

[1mapi_gateway[0m
    ✅ main.py syntax valid

[1matlas_service[0m
    ✅ main.py syntax valid

[1mauditory_cortex_service[0m
    ✅ main.py syntax valid

[1mauth_service[0m
    ✅ main.py syntax valid

[1mautonomous_investigation_service[0m
    ✅ main.py syntax valid

[1mbas_service[0m
    ✅ main.py syntax valid

[1mc2_orchestration_service[0m
    ✅ main.py syntax valid

[1mchemical_sensing_service[0m
    ✅ main.py syntax valid

[1mcloud_coordinator_service[0m
    ✅ main.py syntax valid

[1mcyber_service[0m
    ✅ main.py syntax valid

[1mdigital_thalamus_service[0m
    ✅ main.py syntax valid

[1mdomain_service[0m
    ✅ main.py syntax valid

[1medge_agent_service[0m
    ✅ main.py syntax valid

[1methical_audit_service[0m
    ✅ main.py syntax valid

[1mgoogle_osint_service[0m
    ✅ main.py syntax valid

[1mhcl_analyzer_service[0m
    ✅ main.py syntax valid

[1mhcl_executor_service[0m
    ✅ main.py syntax valid

[1mhcl_kb_service[0m
    ✅ main.py syntax valid

[1mhcl_monitor_service[0m
    ✅ main.py syntax valid

[1mhcl_planner_service[0m
    ✅ main.py syntax valid

[1mhitl_patch_service[0m
    ✅ main.py syntax valid

[1mhomeostatic_regulation[0m
    ✅ main.py syntax valid

[1mhpc_service[0m
    ✅ main.py syntax valid

[1mhsas_service[0m
    ✅ main.py syntax valid

[1mimmunis_api_service[0m
    ✅ main.py syntax valid

[1mimmunis_bcell_service[0m
    ✅ main.py syntax valid

[1mimmunis_cytotoxic_t_service[0m
    ✅ main.py syntax valid

[1mimmunis_dendritic_service[0m
    ✅ main.py syntax valid

[1mimmunis_helper_t_service[0m
    ✅ main.py syntax valid

[1mimmunis_macrophage_service[0m
    ✅ main.py syntax valid

[1mimmunis_neutrophil_service[0m
    ✅ main.py syntax valid

[1mimmunis_nk_cell_service[0m
    ✅ main.py syntax valid

[1mimmunis_treg_service[0m
    ✅ main.py syntax valid

[1mip_intelligence_service[0m
    ✅ main.py syntax valid

[1mmalware_analysis_service[0m
    ✅ main.py syntax valid

[1mmaximus_core_service[0m
    ✅ main.py syntax valid

[1mmaximus_eureka[0m
    ✅ main.py syntax valid

[1mmaximus_integration_service[0m
    ✅ main.py syntax valid

[1mmaximus_oraculo[0m
    ✅ main.py syntax valid

[1mmaximus_oraculo_v2[0m
    ✅ main.py syntax valid

[1mmaximus_orchestrator_service[0m
    ✅ main.py syntax valid

[1mmaximus_predict[0m
    ✅ main.py syntax valid

[1mmemory_consolidation_service[0m
    ✅ main.py syntax valid

[1mmock_vulnerable_apps[0m
    ✅ main.py syntax valid

[1mnarrative_analysis_service[0m
    ✅ main.py syntax valid

[1mnarrative_manipulation_filter[0m
    ✅ main.py syntax valid

[1mnetwork_monitor_service[0m
    ✅ main.py syntax valid

[1mnetwork_recon_service[0m
    ✅ main.py syntax valid

[1mneuromodulation_service[0m
    ✅ main.py syntax valid

[1mnmap_service[0m
    ✅ main.py syntax valid

[1moffensive_gateway[0m
    ✅ main.py syntax valid

[1moffensive_orchestrator_service[0m
    ✅ main.py syntax valid

[1moffensive_tools_service[0m
    ✅ main.py syntax valid

[1mosint_service[0m
    ✅ main.py syntax valid

[1mpredictive_threat_hunting_service[0m
    ✅ main.py syntax valid

[1mprefrontal_cortex_service[0m
    ✅ main.py syntax valid

[1mpurple_team[0m
    ✅ main.py syntax valid

[1mreactive_fabric_analysis[0m
    ✅ main.py syntax valid

[1mreactive_fabric_core[0m
    ✅ main.py syntax valid

[1mreflex_triage_engine[0m
    ✅ main.py syntax valid

[1mrte_service[0m
    ✅ main.py syntax valid

[1mseriema_graph[0m
    ✅ main.py syntax valid

[1msinesp_service[0m
    ✅ main.py syntax valid

[1msocial_eng_service[0m
    ✅ main.py syntax valid

[1msomatosensory_service[0m
    ✅ main.py syntax valid

[1mssl_monitor_service[0m
    ✅ main.py syntax valid

[1mstrategic_planning_service[0m
    ✅ main.py syntax valid

[1mtataca_ingestion[0m
    ✅ main.py syntax valid

[1mtegumentar_service[0m
    ✅ main.py syntax valid

[1mthreat_intel_service[0m
    ✅ main.py syntax valid

[1mvestibular_service[0m
    ✅ main.py syntax valid

[1mvisual_cortex_service[0m
    ✅ main.py syntax valid

[1mvuln_intel_service[0m
    ✅ main.py syntax valid

[1mvuln_scanner_service[0m
    ✅ main.py syntax valid

[1mwargaming_crisol[0m
    ✅ main.py syntax valid

[1mweb_attack_service[0m
    ✅ main.py syntax valid


[1mImport Validation: 100.00% pass rate[0m
  Passed: 83/83

[94m[1m================================================================================[0m
[94m[1m                     PHASE 4: PORT AVAILABILITY VALIDATION                      [0m
[94m[1m================================================================================[0m

Checking required ports are available for services...

[92m✅ Port 8000 (API Gateway) - AVAILABLE[0m
[92m✅ Port 8100 (MAXIMUS Core Service) - AVAILABLE[0m
[92m✅ Port 8001 (Prometheus Metrics) - AVAILABLE[0m

[94m[1m================================================================================[0m
[94m[1m                               VALIDATION SUMMARY                               [0m
[94m[1m================================================================================[0m

[1mOverall Results:[0m
  Total Services: 83
  Structure:  83/83 (100.00%)
  UV Sync:    83/83 (100.00%)
  Imports:    83/83 (100.00%)
  Ports:      ✅ AVAILABLE

[92m[1m╔═══════════════════════════════════════════════════════════╗[0m
[92m[1m║  🎉 BACKEND ABSOLUTE 100% - ALL VALIDATIONS PASSED! 🎉   ║[0m
[92m[1m╚═══════════════════════════════════════════════════════════╝[0m

[1mPadrão Pagani Absoluto: 100% = 100%[0m
[1mEvidence-First Validated ✅[0m
