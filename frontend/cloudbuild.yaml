# ═══════════════════════════════════════════════════════════════════════════
# Vértice Frontend - Cloud Build Configuration
# ═══════════════════════════════════════════════════════════════════════════
# Automated CI/CD pipeline for deploying frontend to Cloud Run
#
# Setup:
# 1. Enable Cloud Build API: gcloud services enable cloudbuild.googleapis.com
# 2. Connect repository: gcloud builds triggers create github (follow prompts)
# 3. Set substitution variables in Cloud Build trigger settings
#
# Trigger:
# - Manual: gcloud builds submit --config=cloudbuild.yaml
# - Automatic: Configure GitHub trigger on push to main branch

steps:
  # ───────────────────────────────────────────────────────────────────────
  # STEP 1: Build Docker image
  # ───────────────────────────────────────────────────────────────────────
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/vertice-images/vertice-frontend:$COMMIT_SHA'
      - '-t'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/vertice-images/vertice-frontend:latest'
      - '--build-arg'
      - 'NODE_ENV=production'
      - '-f'
      - 'frontend/Dockerfile'
      - './frontend'
    id: 'build-image'
    timeout: '600s'

  # ───────────────────────────────────────────────────────────────────────
  # STEP 2: Push image to Artifact Registry
  # ───────────────────────────────────────────────────────────────────────
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/vertice-images/vertice-frontend:$COMMIT_SHA'
    id: 'push-image'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/vertice-images/vertice-frontend:latest'
    id: 'push-latest'

  # ───────────────────────────────────────────────────────────────────────
  # STEP 3: Deploy to Cloud Run (SECURE - Authentication Required)
  # ───────────────────────────────────────────────────────────────────────
  # SECURITY: --no-allow-unauthenticated = Only authorized users can access
  # Access control via IAM: roles/run.invoker
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'vertice-frontend'
      - '--image=$_REGION-docker.pkg.dev/$PROJECT_ID/vertice-images/vertice-frontend:$COMMIT_SHA'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--no-allow-unauthenticated'
      - '--memory=512Mi'
      - '--cpu=1'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--port=8080'
      - '--ingress=all'
      - '--set-env-vars=VITE_ENV=production'
      - '--set-env-vars=VITE_API_GATEWAY_URL=$_API_GATEWAY_URL'
      - '--set-env-vars=VITE_MAXIMUS_CORE_URL=$_MAXIMUS_CORE_URL'
      - '--set-env-vars=VITE_MAXIMUS_ORCHESTRATOR_URL=$_MAXIMUS_ORCHESTRATOR_URL'
      - '--set-env-vars=VITE_MAXIMUS_EUREKA_URL=$_MAXIMUS_EUREKA_URL'
      - '--set-env-vars=VITE_MAXIMUS_ORACULO_URL=$_MAXIMUS_ORACULO_URL'
      - '--set-env-vars=VITE_HITL_API_URL=$_HITL_API_URL'
      - '--set-env-vars=VITE_IMMUNIS_API_URL=$_IMMUNIS_API_URL'
      - '--set-env-vars=VITE_DEFENSIVE_CORE_URL=$_DEFENSIVE_CORE_URL'
      - '--set-env-vars=VITE_CONSCIOUSNESS_API_URL=$_CONSCIOUSNESS_API_URL'
      - '--set-env-vars=VITE_OSINT_API_URL=$_OSINT_API_URL'
    id: 'deploy-cloud-run'
    timeout: '600s'

# ═══════════════════════════════════════════════════════════════════════════
# SUBSTITUTIONS
# ═══════════════════════════════════════════════════════════════════════════
# Default values - override these in Cloud Build trigger settings or via CLI:
# gcloud builds submit --substitutions=_REGION=us-central1,...

substitutions:
  _REGION: us-east1
  # SECURITY NOTE: All requests go through API Gateway (LoadBalancer)
  # API Gateway routes to internal GKE services via ClusterIP
  # External IP: 34.148.161.131 (GKE LoadBalancer)
  _API_GATEWAY_URL: http://34.148.161.131:8000
  _MAXIMUS_CORE_URL: http://34.148.161.131:8000
  _MAXIMUS_ORCHESTRATOR_URL: http://34.148.161.131:8000
  _MAXIMUS_EUREKA_URL: http://34.148.161.131:8000
  _MAXIMUS_ORACULO_URL: http://34.148.161.131:8000
  _HITL_API_URL: http://34.148.161.131:8000
  _IMMUNIS_API_URL: http://34.148.161.131:8000
  _DEFENSIVE_CORE_URL: http://34.148.161.131:8000
  _CONSCIOUSNESS_API_URL: http://34.148.161.131:8000
  _OSINT_API_URL: http://34.148.161.131:8000

# ═══════════════════════════════════════════════════════════════════════════
# OPTIONS
# ═══════════════════════════════════════════════════════════════════════════
options:
  machineType: 'N1_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
  logStreamingOption: STREAM_ON

# ═══════════════════════════════════════════════════════════════════════════
# IMAGES
# ═══════════════════════════════════════════════════════════════════════════
images:
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/vertice-images/vertice-frontend:$COMMIT_SHA'
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/vertice-images/vertice-frontend:latest'

# ═══════════════════════════════════════════════════════════════════════════
# TIMEOUT
# ═══════════════════════════════════════════════════════════════════════════
timeout: '1800s'
