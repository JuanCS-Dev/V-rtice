import React from 'react';
import { getSeverityColor, getConfidenceBadge, formatExecutionTime } from '../../../../api/worldClassTools';
import styles from './CVEInfo.module.css';

export const CVEInfo = ({ data }) => {
  const confidenceBadge = getConfidenceBadge(data.confidence);

  return (
    <div className={styles.container}>
      {/* Status Bar */}
      <div className={styles.statusBar}>
        <div className={styles.statusItem}>
          <span className={styles.label}>STATUS:</span>
          <span className={`${styles.value} ${styles[`status-${data.status}`]}`}>
            {data.status === 'success' ? '✓ SUCCESS' : '✗ FAILED'}
          </span>
        </div>
        <div className={styles.statusItem}>
          <span className={styles.label}>CONFIDENCE:</span>
          <span className={styles.value} style={{ color: confidenceBadge.color }}>
            {confidenceBadge.icon} {data.confidence.toFixed(1)}% ({confidenceBadge.label})
          </span>
        </div>
        <div className={styles.statusItem}>
          <span className={styles.label}>TEMPO:</span>
          <span className={styles.value}>{formatExecutionTime(data.execution_time_ms)}</span>
        </div>
      </div>

      {/* CVE Card */}
      <div className={styles.cveCard}>
        <div className={styles.cveHeader} style={{ borderLeftColor: getSeverityColor(data.severity) }}>
          <h4 className={styles.cveId}>{data.cve_id}</h4>
          <span className={`${styles.severityBadge} ${styles[data.severity.toLowerCase()]}`}>
            {data.severity}
          </span>
        </div>

        <div className={styles.cveDetails}>
          <div className={styles.detailRow}>
            <span className={styles.detailLabel}>CVSS Score:</span>
            <span className={styles.detailValue}>
              <div className={styles.cvssBar}>
                <div
                  className={styles.cvssFill}
                  style={{
                    width: `${(data.cvss_score / 10) * 100}%`,
                    backgroundColor: getSeverityColor(data.severity)
                  }}
                ></div>
              </div>
              {data.cvss_score ? data.cvss_score.toFixed(1) : 'N/A'} / 10
            </span>
          </div>

          <div className={styles.detailRow}>
            <span className={styles.detailLabel}>Exploits Encontrados:</span>
            <span className={`${styles.detailValue} ${styles.highlight}`}>
              {data.exploits?.length || 0}
            </span>
          </div>

          <div className={styles.detailRow}>
            <span className={styles.detailLabel}>Patch Disponível:</span>
            <span className={`${styles.detailValue} ${data.patch_available ? styles.success : styles.danger}`}>
              {data.patch_available ? '✓ SIM' : '✗ NÃO'}
            </span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CVEInfo;
