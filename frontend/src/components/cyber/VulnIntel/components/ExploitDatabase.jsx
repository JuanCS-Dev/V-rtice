import React, { useState } from 'react';

/**
 * ExploitDatabase - Database de exploits dispon√≠veis
 */
export const ExploitDatabase = ({ exploits, onSearch, isLoading }) => {
  const [searchQuery, setSearchQuery] = useState('');
  const [filterType, setFilterType] = useState('all'); // 'all' | 'metasploit' | 'github' | 'exploitdb'

  const handleSearch = (e) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      onSearch(searchQuery.trim());
    }
  };

  const filteredExploits = exploits.filter(exploit => {
    if (filterType === 'all') return true;
    return exploit.source === filterType || exploit.type === filterType;
  });

  const getSourceIcon = (source) => {
    const icons = {
      metasploit: 'üéØ',
      github: 'üêô',
      exploitdb: 'üí•',
      packetstorm: 'üì¶',
    };
    return icons[source?.toLowerCase()] || 'üîß';
  };

  const getSourceColor = (source) => {
    const colors = {
      metasploit: 'red',
      github: 'purple',
      exploitdb: 'orange',
      packetstorm: 'cyan',
    };
    return colors[source?.toLowerCase()] || 'gray';
  };

  return (
    <div className="max-w-6xl mx-auto space-y-6">
      {/* Search Bar */}
      <form onSubmit={handleSearch} className="space-y-4">
        <div className="relative">
          <div className="absolute left-4 top-1/2 transform -translate-y-1/2 text-3xl">
            üí•
          </div>
          <input
            type="text"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            placeholder="Search for exploits (CVE ID, keyword, platform)..."
            className="w-full bg-gradient-to-r from-red-900/20 to-orange-900/20 border-2 border-red-400/30 rounded-lg pl-16 pr-32 py-4 text-red-400 font-mono text-lg focus:outline-none focus:border-red-400 transition-all placeholder-red-400/30"
            disabled={isLoading}
          />
          <button
            type="submit"
            disabled={isLoading || !searchQuery.trim()}
            className="absolute right-2 top-1/2 transform -translate-y-1/2 px-6 py-2 bg-gradient-to-r from-red-600 to-orange-600 text-white font-bold rounded-lg hover:from-red-500 hover:to-orange-500 transition-all disabled:opacity-50 disabled:cursor-not-allowed shadow-lg shadow-red-400/20"
          >
            {isLoading ? (
              <span className="flex items-center gap-2">
                <span className="animate-spin">‚öôÔ∏è</span>
                SEARCHING...
              </span>
            ) : (
              <span className="flex items-center gap-2">
                <span>üîç</span>
                SEARCH
              </span>
            )}
          </button>
        </div>

        {/* Filters */}
        <div className="flex gap-2">
          {[
            { id: 'all', name: 'All Sources', icon: 'üåê' },
            { id: 'metasploit', name: 'Metasploit', icon: 'üéØ' },
            { id: 'github', name: 'GitHub', icon: 'üêô' },
            { id: 'exploitdb', name: 'ExploitDB', icon: 'üí•' },
          ].map(filter => (
            <button
              key={filter.id}
              type="button"
              onClick={() => setFilterType(filter.id)}
              className={`
                px-4 py-2 rounded-lg font-bold text-sm transition-all flex items-center gap-2
                ${
                  filterType === filter.id
                    ? 'bg-red-400/20 text-red-400 border-2 border-red-400'
                    : 'bg-black/30 text-red-400/50 border-2 border-red-400/20 hover:text-red-400'
                }
              `}
            >
              <span>{filter.icon}</span>
              {filter.name}
            </button>
          ))}
        </div>
      </form>

      {/* Results */}
      {filteredExploits.length > 0 ? (
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h3 className="text-xl font-bold text-red-400 flex items-center gap-2">
              <span className="text-2xl">üí•</span>
              AVAILABLE EXPLOITS
            </h3>
            <div className="bg-black/50 border border-red-400/30 rounded px-4 py-2">
              <span className="text-red-400 font-bold">{filteredExploits.length}</span>
              <span className="text-red-400/60 text-sm ml-1">exploits found</span>
            </div>
          </div>

          <div className="grid grid-cols-1 gap-3">
            {filteredExploits.map((exploit, idx) => {
              const source = exploit.source || exploit.type || 'unknown';
              const icon = getSourceIcon(source);
              const color = getSourceColor(source);

              return (
                <div
                  key={idx}
                  className="bg-gradient-to-r from-red-900/20 to-orange-900/20 border border-red-400/30 rounded-lg p-4 hover:border-red-400 transition-all group"
                >
                  <div className="flex items-start justify-between gap-4">
                    <div className="flex-1">
                      {/* Header */}
                      <div className="flex items-center gap-3 mb-2">
                        <span className="text-2xl">{icon}</span>
                        <div>
                          <h4 className="text-red-400 font-bold text-lg group-hover:text-red-300">
                            {exploit.title || exploit.name || 'Unnamed Exploit'}
                          </h4>
                          <div className="flex items-center gap-2 text-sm">
                            <span className={`text-${color}-400/80`}>
                              {source.toUpperCase()}
                            </span>
                            {exploit.cve_id && (
                              <>
                                <span className="text-red-400/40">‚Ä¢</span>
                                <span className="text-red-400/80 font-mono">{exploit.cve_id}</span>
                              </>
                            )}
                            {exploit.date && (
                              <>
                                <span className="text-red-400/40">‚Ä¢</span>
                                <span className="text-red-400/60">{exploit.date}</span>
                              </>
                            )}
                          </div>
                        </div>
                      </div>

                      {/* Description */}
                      {exploit.description && (
                        <p className="text-red-400/70 text-sm mb-3">
                          {exploit.description}
                        </p>
                      )}

                      {/* Meta */}
                      <div className="flex flex-wrap gap-2">
                        {exploit.platform && (
                          <span className="px-2 py-1 bg-cyan-400/10 border border-cyan-400/30 rounded text-cyan-400 text-xs">
                            {exploit.platform}
                          </span>
                        )}
                        {exploit.type && (
                          <span className="px-2 py-1 bg-orange-400/10 border border-orange-400/30 rounded text-orange-400 text-xs">
                            {exploit.type}
                          </span>
                        )}
                        {exploit.reliability && (
                          <span className="px-2 py-1 bg-green-400/10 border border-green-400/30 rounded text-green-400 text-xs">
                            Reliability: {exploit.reliability}
                          </span>
                        )}
                      </div>
                    </div>

                    {/* Actions */}
                    <div className="flex flex-col gap-2">
                      {exploit.url && (
                        <a
                          href={exploit.url}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="px-4 py-2 bg-gradient-to-r from-red-600 to-orange-600 text-white font-bold text-sm rounded hover:from-red-500 hover:to-orange-500 transition-all shadow-lg shadow-red-400/20 whitespace-nowrap"
                        >
                          VIEW EXPLOIT ‚Üí
                        </a>
                      )}
                      {exploit.path && (
                        <div className="px-3 py-1 bg-black/50 border border-red-400/30 rounded text-red-400/70 text-xs font-mono">
                          {exploit.path}
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      ) : (
        <div className="text-center py-20">
          <div className="text-6xl mb-4 opacity-50">üí•</div>
          <div className="text-red-400/50 text-xl font-bold">
            {isLoading ? 'Searching Exploit Database...' : 'No Exploits Found'}
          </div>
          <div className="text-red-400/30 text-sm mt-2">
            {isLoading ? 'Please wait...' : 'Try searching for a CVE ID or vulnerability keyword'}
          </div>
        </div>
      )}
    </div>
  );
};

export default ExploitDatabase;
