/**
 * VULNERABILITY SCANNER - Offensive Vulnerability Discovery & Exploitation Tool
 *
 * Ferramenta ofensiva para descoberta e explora√ß√£o de vulnerabilidades
 * Requer permiss√£o 'offensive' para acesso
 *
 * AI-FIRST DESIGN (Maximus Vision Protocol):
 * - <article> with data-maximus-tool="vulnerability-scanner"
 * - <header> for tool header with warning
 * - <section> for scan and exploit forms
 * - <section> for active scan status
 * - <section> for exploits list
 *
 * Maximus can:
 * - Identify tool via data-maximus-tool="vulnerability-scanner"
 * - Monitor scan status via data-maximus-status
 * - Access forms via data-maximus-section="forms"
 * - Interpret exploit results via semantic structure
 *
 * Security: RBAC enforced, access denied without offensive permission
 * i18n: Ready for internationalization
 * @see MAXIMUS_VISION_PROTOCOL_HTML_BLUEPRINT.md
 * @version 2.0.0 (Maximus Vision)
 */

import React from 'react';
import { Alert } from '../../shared';
import { useVulnerabilityScanner } from './hooks/useVulnerabilityScanner';
import { AccessDenied } from './components/AccessDenied';
import { ScanForm } from './components/ScanForm';
import { ExploitForm } from './components/ExploitForm';
import { ActiveScanStatus } from './components/ActiveScanStatus';
import { ExploitsList } from './components/ExploitsList';
import styles from './VulnerabilityScanner.module.css';

export const VulnerabilityScanner = () => {
  const {
    scanData,
    loading,
    hasOffensivePermission,
    startScan,
    executeExploit
  } = useVulnerabilityScanner();

  if (!hasOffensivePermission) {
    return <AccessDenied />;
  }

  return (
    <article
      className={styles.container}
      role="article"
      aria-labelledby="vulnerability-scanner-title"
      data-maximus-tool="vulnerability-scanner"
      data-maximus-category="offensive"
      data-maximus-status={loading.scan ? 'scanning' : 'ready'}>

      {/* Header */}
      <header
        className={styles.header}
        data-maximus-section="tool-header">
        <div>
          <h2 id="vulnerability-scanner-title" className={styles.title}><span aria-hidden="true">üéØ</span> Vulnerability Scanner</h2>
          <p className={styles.description}>
            Ferramenta ofensiva para descoberta e explora√ß√£o de vulnerabilidades
          </p>
        </div>
        <Alert variant="warning" size="sm">
          ‚ö†Ô∏è Uso autorizado apenas para testes de seguran√ßa em sistemas pr√≥prios
        </Alert>
      </header>

      {/* Forms Grid */}
      <section
        className={styles.forms}
        role="region"
        aria-label="Scan and exploit forms"
        data-maximus-section="forms">
        <ScanForm onSubmit={startScan} loading={loading.scan} />
        <ExploitForm
          exploits={scanData.exploits}
          onSubmit={executeExploit}
          loading={loading.exploit}
        />
      </section>

      {/* Active Scan Status */}
      {scanData.activeScan && (
        <section
          role="region"
          aria-label="Active scan status"
          data-maximus-section="scan-status">
          <ActiveScanStatus scan={scanData.activeScan} />
        </section>
      )}

      {/* Available Exploits */}
      <section
        role="region"
        aria-label="Available exploits list"
        data-maximus-section="exploits">
        <ExploitsList
          exploits={scanData.exploits}
          loading={loading.exploits}
        />
      </section>
    </article>
  );
};

export default VulnerabilityScanner;
