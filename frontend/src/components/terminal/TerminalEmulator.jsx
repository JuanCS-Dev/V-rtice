import React, { useEffect, useRef, useState, useContext } from 'react';
import { Terminal } from '@xterm/xterm';
import { FitAddon } from '@xterm/addon-fit';
import { WebLinksAddon } from '@xterm/addon-web-links';
import { SearchAddon } from '@xterm/addon-search';
import { AuthContext } from '../../contexts/AuthContext';
import { useTerminalCommands } from '../../hooks/useTerminalCommands';
import '@xterm/xterm/css/xterm.css';

const TerminalEmulator = ({ theme, isFullscreen }) => {
  const terminalRef = useRef(null);
  const terminal = useRef(null);
  const fitAddon = useRef(null);
  const webLinksAddon = useRef(null);
  const searchAddon = useRef(null);
  const { user, getAuthToken } = useContext(AuthContext);
  const [currentPath, setCurrentPath] = useState('~');
  const [commandHistory, setCommandHistory] = useState([]);
  const [historyIndex, setHistoryIndex] = useState(-1);
  const [menuContext, setMenuContext] = useState('main'); // main, cyber, osint, ai_chat
  const currentCommand = useRef('');
  const [aiChatHistory, setAiChatHistory] = useState([]);
  const [isAIChatMode, setIsAIChatMode] = useState(false);

  const { executeCommand, isExecuting, formatResult } = useTerminalCommands();

  const ASCII_BANNER = `
\x1b[38;2;0;255;255m  ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó\x1b[0m
\x1b[38;2;0;230;255m  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m
\x1b[38;2;0;200;255m  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  \x1b[0m
\x1b[38;2;0;170;255m  ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïù   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  \x1b[0m
\x1b[38;2;0;140;255m   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó\x1b[0m
\x1b[38;2;0;110;255m    ‚ïö‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m

\x1b[38;2;255;100;0m            ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïó\x1b[0m
\x1b[38;2;255;80;0m           ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë\x1b[0m
\x1b[38;2;255;60;0m           ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë\x1b[0m
\x1b[38;2;255;40;0m           ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë\x1b[0m
\x1b[38;2;255;20;0m           ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë\x1b[0m
\x1b[38;2;255;0;0m            ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù\x1b[0m

\x1b[0;37m  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\x1b[0m
\x1b[1;36m  üõ°Ô∏è  CYBER SECURITY  üîç OSINT  üíª CLI EXPERT\x1b[0m
\x1b[0;37m  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\x1b[0m

\x1b[1;33m  Welcome to V√©rtice CLI v2.0\x1b[0m
\x1b[0;37m  Type \x1b[1;32m'menu'\x1b[0m to get started or \x1b[1;32m'help'\x1b[0m for all commands\x1b[0m

\x1b[2;37m  Authors: Juan Carlos & Claude Code\x1b[0m

  `;

  useEffect(() => {
    // Inicializar terminal
    terminal.current = new Terminal({
      cursorBlink: true,
      fontFamily: '"Fira Code", "Cascadia Code", "JetBrains Mono", monospace',
      fontSize: 14,
      letterSpacing: 0.5,
      lineHeight: 1.2,
      theme: theme,
      allowTransparency: true,
      convertEol: true,
    });

    // Addons
    fitAddon.current = new FitAddon();
    webLinksAddon.current = new WebLinksAddon();
    searchAddon.current = new SearchAddon();

    terminal.current.loadAddon(fitAddon.current);
    terminal.current.loadAddon(webLinksAddon.current);
    terminal.current.loadAddon(searchAddon.current);

    // Abrir terminal no DOM
    terminal.current.open(terminalRef.current);
    fitAddon.current.fit();

    // Banner inicial
    terminal.current.write(ASCII_BANNER);
    writePrompt();

    // Handler para entrada do usu√°rio
    terminal.current.onData(handleTerminalInput);

    // Cleanup
    return () => {
      terminal.current?.dispose();
    };
  }, []);

  useEffect(() => {
    // Atualizar tema
    if (terminal.current) {
      terminal.current.options.theme = theme;
    }
  }, [theme]);

  useEffect(() => {
    // Ajustar tamanho quando entra/sai do fullscreen
    if (fitAddon.current) {
      setTimeout(() => {
        fitAddon.current.fit();
      }, 100);
    }
  }, [isFullscreen]);

  const writePrompt = () => {
    const userName = user?.email?.split('@')[0] || 'user';
    const prompt = `\r\n\x1b[1;32m${userName}@vertice\x1b[0m:\x1b[1;34m${currentPath}\x1b[0m$ `;
    terminal.current.write(prompt);
  };

  const handleTerminalInput = (data) => {
    const term = terminal.current;

    switch (data) {
      case '\r': // Enter
        console.log('Enter pressionado, currentCommand:', currentCommand.current); // Debug log
        if (currentCommand.current.trim()) {
          console.log('Processando comando:', currentCommand.current.trim()); // Debug log
          processCommand(currentCommand.current.trim());
          setCommandHistory(prev => [...prev, currentCommand.current.trim()]);
          setHistoryIndex(-1);
        } else {
          console.log('Comando vazio, escrevendo prompt'); // Debug log
          writePrompt();
        }
        currentCommand.current = '';
        break;

      case '\u007F': // Backspace
        if (currentCommand.current.length > 0) {
          currentCommand.current = currentCommand.current.slice(0, -1);
          term.write('\b \b');
        }
        break;

      case '\u001b[A': // Arrow Up
        if (commandHistory.length > 0) {
          const newIndex = historyIndex === -1 ? commandHistory.length - 1 : Math.max(0, historyIndex - 1);
          setHistoryIndex(newIndex);
          const command = commandHistory[newIndex];

          // Limpar linha atual
          term.write(`\r\x1b[K${getUserPrompt()}${command}`);
          currentCommand.current = command;
        }
        break;

      case '\u001b[B': // Arrow Down
        if (historyIndex >= 0) {
          const newIndex = historyIndex + 1;
          if (newIndex >= commandHistory.length) {
            setHistoryIndex(-1);
            currentCommand.current = '';
            term.write(`\r\x1b[K${getUserPrompt()}`);
          } else {
            setHistoryIndex(newIndex);
            const command = commandHistory[newIndex];
            term.write(`\r\x1b[K${getUserPrompt()}${command}`);
            currentCommand.current = command;
          }
        }
        break;

      case '\u0003': // Ctrl+C
        term.write('^C');
        writePrompt();
        currentCommand.current = '';
        break;

      case '\u0004': // Ctrl+D
        term.write('\r\n\x1b[1;33mUse "exit" para sair\x1b[0m');
        writePrompt();
        break;

      default:
        // Caracteres normais
        if (data >= ' ' || data === '\t') {
          currentCommand.current = currentCommand.current + data;
          term.write(data);
        }
        break;
    }
  };

  const getUserPrompt = () => {
    const userName = user?.email?.split('@')[0] || 'user';
    return `\x1b[1;32m${userName}@vertice\x1b[0m:\x1b[1;34m${currentPath}\x1b[0m$ `;
  };

  const processCommand = async (command) => {
    const term = terminal.current;
    console.log('processCommand() chamada com:', command); // Debug log
    term.write(`\r\n`);

    // Comandos internos do terminal
    const [cmd, ...args] = command.split(' ');

    console.log('Comando recebido:', cmd, 'Args:', args, 'Context:', menuContext); // Debug log

    // Primeiro verificar se √© op√ß√£o num√©rica baseado no contexto do menu
    if (['0', '1', '2', '3', '4', '5'].includes(cmd)) {
      if (menuContext === 'main') {
        switch (cmd) {
          case '1':
            showAuroraAIMenu();
            setMenuContext('aurora');
            break;
          case '2':
            showCyberMenu();
            setMenuContext('cyber');
            break;
          case '3':
            showOSINTMenu();
            setMenuContext('osint');
            break;
          case '4':
            await showStatus();
            break;
          case '5':
            showHelp();
            break;
        }
      } else if (menuContext === 'cyber') {
        await handleCyberMenuOption(cmd);
      } else if (menuContext === 'osint') {
        await handleOSINTMenuOption(cmd);
      } else if (menuContext === 'aurora') {
        await handleAuroraAIOption(cmd);
      }
    } else {
      // Depois verificar comandos textuais
      switch (cmd.toLowerCase()) {
        case 'clear':
        case 'cls':
          term.clear();
          term.write(ASCII_BANNER);
          writePrompt();
          return;

        case 'exit':
          term.write('\x1b[1;31mDesconectando...\x1b[0m\r\n');
          writePrompt();
          // TODO: Implementar logout/sa√≠da
          return;

        case 'help':
          console.log('Executando comando help'); // Debug log
          showHelp();
          break;

        case 'menu':
          console.log('Executando comando menu'); // Debug log
          showMainMenu();
          setMenuContext('main');
          break;

        case 'cyber':
          if (args.length === 0) {
            showCyberMenu();
          } else {
            await executeCyberCommand(args);
          }
          break;

        case 'osint':
          if (args.length === 0) {
            showOSINTMenu();
          } else {
            await executeOSINTCommand(args);
          }
          break;

        case 'status':
          await showStatus();
          break;

        default:
          term.write(`\x1b[1;31mComando n√£o encontrado: ${cmd}\x1b[0m\r\n`);
          term.write(`Digite 'help' para ver comandos dispon√≠veis ou 'menu' para op√ß√µes.\r\n`);
          break;
      }
    }

    writePrompt();
  };

  const showHelp = () => {
    const helpText = `
\x1b[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m
\x1b[1;36m‚ïë                    V√âRTICE CLI - HELP GUIDE                    ‚ïë\x1b[0m
\x1b[1;36m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m

\x1b[1;32müìã COMANDOS B√ÅSICOS:\x1b[0m
  \x1b[1;37mhelp\x1b[0m                    - Exibe esta ajuda detalhada
  \x1b[1;37mmenu\x1b[0m                    - Menu interativo principal (recomendado)
  \x1b[1;37mstatus\x1b[0m                  - Verifica status de todos os servi√ßos
  \x1b[1;37mclear\x1b[0m, \x1b[1;37mcls\x1b[0m              - Limpa completamente a tela
  \x1b[1;37mexit\x1b[0m                    - Sair do terminal V√©rtice

\x1b[1;32müõ°Ô∏è  CYBER SECURITY MODULE:\x1b[0m
  \x1b[1;37mcyber\x1b[0m                   - Menu interativo do m√≥dulo
  \x1b[1;37mcyber ip\x1b[0m \x1b[1;33m<ip>\x1b[0m           - An√°lise completa de IP
    \x1b[0;37mExemplo: cyber ip 8.8.8.8\x1b[0m
  \x1b[1;37mcyber domain\x1b[0m \x1b[1;33m<domain>\x1b[0m   - An√°lise de dom√≠nio (WHOIS, DNS)
    \x1b[0;37mExemplo: cyber domain google.com\x1b[0m
  \x1b[1;31mcyber scan\x1b[0m \x1b[1;33m<target>\x1b[0m     - Vulnerability scanner [OFENSIVO]
    \x1b[0;37mExemplo: cyber scan 192.168.1.100\x1b[0m
    \x1b[1;33m‚ö†Ô∏è  Requer autoriza√ß√£o - Apenas sistemas pr√≥prios\x1b[0m

\x1b[1;32müîç OSINT MODULE:\x1b[0m
  \x1b[1;37mosint\x1b[0m                   - Menu interativo do m√≥dulo
  \x1b[1;37mosint email\x1b[0m \x1b[1;33m<email>\x1b[0m     - An√°lise de email e vazamentos
    \x1b[0;37mExemplo: osint email user@company.com\x1b[0m
  \x1b[1;37mosint phone\x1b[0m \x1b[1;33m<phone>\x1b[0m     - Investiga√ß√£o de n√∫mero de telefone
    \x1b[0;37mExemplo: osint phone +5511987654321\x1b[0m
  \x1b[1;37mosint username\x1b[0m \x1b[1;33m<user>\x1b[0m   - Busca em m√∫ltiplas plataformas
    \x1b[0;37mExemplo: osint username john_doe\x1b[0m
  \x1b[1;37mosint social\x1b[0m \x1b[1;33m<platform> <id>\x1b[0m - An√°lise de rede social
    \x1b[0;37mExemplo: osint social instagram @username\x1b[0m

\x1b[1;35müí° DICAS DE PRODUTIVIDADE:\x1b[0m
  ‚Ä¢ Use \x1b[1;37m‚Üë\x1b[0m e \x1b[1;37m‚Üì\x1b[0m para navegar no hist√≥rico de comandos
  ‚Ä¢ Use \x1b[1;37mCtrl+C\x1b[0m para cancelar comando atual
  ‚Ä¢ Digite \x1b[1;37mmenu\x1b[0m para interface guiada com ajuda contextual
  ‚Ä¢ Todos os comandos t√™m valida√ß√£o autom√°tica de par√¢metros

\x1b[1;33müöÄ COME√áAR RAPIDAMENTE:\x1b[0m Digite \x1b[1;37mmenu\x1b[0m para interface interativa
`;
    terminal.current.write(helpText);
  };

  const showMainMenu = () => {
    const term = terminal.current;
    console.log('showMainMenu() chamada'); // Debug log

    if (!term) {
      console.error('Terminal n√£o est√° dispon√≠vel');
      return;
    }

    const menuText = `
\x1b[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m
\x1b[1;36m‚ïë                      MENU PRINCIPAL                         ‚ïë\x1b[0m
\x1b[1;36m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m

Selecione uma op√ß√£o digitando o n√∫mero correspondente:

\x1b[1;32m[1]\x1b[0m ü§ñ \x1b[1;37mAurora AI\x1b[0m
    Assistente de IA para an√°lise inteligente e automa√ß√£o
    \x1b[0;37mModo conversacional com IA especializada em seguran√ßa\x1b[0m

\x1b[1;32m[2]\x1b[0m üõ°Ô∏è  \x1b[1;37mCyber Security Module\x1b[0m
    Ferramentas de an√°lise de seguran√ßa, IP intelligence e scanning
    \x1b[0;37mComandos: cyber ip <ip>, cyber domain <domain>, cyber scan <target>\x1b[0m

\x1b[1;32m[3]\x1b[0m üîç \x1b[1;37mOSINT Module\x1b[0m
    Intelig√™ncia em fontes abertas, an√°lise de emails e redes sociais
    \x1b[0;37mComandos: osint email <email>, osint phone <phone>, osint username <user>\x1b[0m

\x1b[1;32m[4]\x1b[0m üìä \x1b[1;37mStatus dos Servi√ßos\x1b[0m
    Verificar status e sa√∫de dos microservi√ßos do V√©rtice
    \x1b[0;37mComando: status\x1b[0m

\x1b[1;32m[5]\x1b[0m üìö \x1b[1;37mAjuda Completa\x1b[0m
    Guia completo de comandos com exemplos pr√°ticos
    \x1b[0;37mComando: help\x1b[0m

\x1b[1;33m‚Üí Digite o n√∫mero da op√ß√£o (1-5) ou o comando diretamente\x1b[0m
`;
    console.log('Escrevendo menu no terminal, tamanho:', menuText.length); // Debug log
    term.write(menuText);
    console.log('Menu escrito com sucesso'); // Debug log
  };

  const showAuroraAIMenu = () => {
    const auroraMenu = `
\x1b[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m
\x1b[1;36m‚ïë                    ü§ñ AURORA AI                             ‚ïë\x1b[0m
\x1b[1;36m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m

\x1b[1;35m‚ú® Assistente de IA especializada em Cyber Security e OSINT\x1b[0m

Selecione uma op√ß√£o digitando o n√∫mero correspondente:

\x1b[1;32m[1]\x1b[0m üí¨ \x1b[1;37mModo Conversacional\x1b[0m
    Chat interativo com Aurora para an√°lises e consultas
    \x1b[0;37mPergunte qualquer coisa sobre seguran√ßa, OSINT ou use comandos\x1b[0m

\x1b[1;32m[2]\x1b[0m üéØ \x1b[1;37mAn√°lise Automatizada\x1b[0m
    Aurora analisa automaticamente targets com IA
    \x1b[0;37mForne√ßa um alvo e Aurora decide a melhor estrat√©gia\x1b[0m

\x1b[1;32m[3]\x1b[0m üìù \x1b[1;37mGerar Relat√≥rio\x1b[0m
    Aurora gera relat√≥rios detalhados de an√°lises anteriores
    \x1b[0;37mRelat√≥rios em formato profissional com insights de IA\x1b[0m

\x1b[1;32m[4]\x1b[0m üß† \x1b[1;37mTreinamento e Dicas\x1b[0m
    Aurora ensina t√©cnicas e boas pr√°ticas
    \x1b[0;37mAprenda sobre ferramentas, metodologias e seguran√ßa\x1b[0m

\x1b[1;32m[0]\x1b[0m ‚¨ÖÔ∏è  \x1b[1;37mVoltar ao Menu Principal\x1b[0m

\x1b[1;33m‚Üí Digite o n√∫mero da op√ß√£o (0-4)\x1b[0m
`;
    terminal.current.write(auroraMenu);
  };

  const showCyberMenu = () => {
    const cyberMenu = `
\x1b[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m
\x1b[1;36m‚ïë              üõ°Ô∏è  CYBER SECURITY MODULE                      ‚ïë\x1b[0m
\x1b[1;36m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m

Selecione uma op√ß√£o digitando o n√∫mero correspondente:

\x1b[1;32m[1]\x1b[0m üåê \x1b[1;37mAn√°lise de IP\x1b[0m
    Analisa um endere√ßo IP com geolocaliza√ß√£o e reputa√ß√£o
    \x1b[0;37mUsage: Digite 1 e forne√ßa o IP quando solicitado\x1b[0m

\x1b[1;32m[2]\x1b[0m üîç \x1b[1;37mAn√°lise de Dom√≠nio\x1b[0m
    An√°lise completa de dom√≠nio (WHOIS, DNS, SSL)
    \x1b[0;37mUsage: Digite 2 e forne√ßa o dom√≠nio quando solicitado\x1b[0m

\x1b[1;32m[3]\x1b[0m üî¥ \x1b[1;37mVulnerability Scanner\x1b[0m \x1b[1;31m[OFENSIVO]\x1b[0m
    Scanner de vulnerabilidades em targets
    \x1b[0;37mUsage: Digite 3 e forne√ßa o target quando solicitado\x1b[0m
    \x1b[1;33m‚ö†Ô∏è  Requer autoriza√ß√£o - Apenas sistemas pr√≥prios\x1b[0m

\x1b[1;32m[4]\x1b[0m üí• \x1b[1;37mExecutar Exploit\x1b[0m \x1b[1;31m[OFENSIVO]\x1b[0m
    Executa exploit espec√≠fico em target
    \x1b[0;37mUsage: Digite 4 e forne√ßa target e exploit_id\x1b[0m
    \x1b[1;33m‚ö†Ô∏è  Requer autoriza√ß√£o especial\x1b[0m

\x1b[1;32m[0]\x1b[0m ‚¨ÖÔ∏è  \x1b[1;37mVoltar ao Menu Principal\x1b[0m

\x1b[1;33m‚Üí Digite o n√∫mero da op√ß√£o (0-4)\x1b[0m
`;
    terminal.current.write(cyberMenu);
  };

  const showOSINTMenu = () => {
    const osintMenu = `
\x1b[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m
\x1b[1;36m‚ïë                    üîç OSINT MODULE                          ‚ïë\x1b[0m
\x1b[1;36m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m

Selecione uma op√ß√£o digitando o n√∫mero correspondente:

\x1b[1;32m[1]\x1b[0m üìß \x1b[1;37mAn√°lise de Email\x1b[0m
    Investiga email, vazamentos e valida√ß√£o
    \x1b[0;37mUsage: Digite 1 e forne√ßa o email quando solicitado\x1b[0m

\x1b[1;32m[2]\x1b[0m üì± \x1b[1;37mAn√°lise de Telefone\x1b[0m
    Investiga√ß√£o de n√∫mero de telefone e operadora
    \x1b[0;37mUsage: Digite 2 e forne√ßa o telefone quando solicitado\x1b[0m

\x1b[1;32m[3]\x1b[0m üë§ \x1b[1;37mInvestiga√ß√£o de Username\x1b[0m
    Busca username em m√∫ltiplas plataformas sociais
    \x1b[0;37mUsage: Digite 3 e forne√ßa o username quando solicitado\x1b[0m

\x1b[1;32m[4]\x1b[0m üåê \x1b[1;37mAn√°lise de Rede Social\x1b[0m
    An√°lise detalhada de perfil em rede social espec√≠fica
    \x1b[0;37mUsage: Digite 4 e forne√ßa plataforma e username\x1b[0m
    \x1b[0;37mPlataformas: instagram, twitter, linkedin, facebook\x1b[0m

\x1b[1;32m[0]\x1b[0m ‚¨ÖÔ∏è  \x1b[1;37mVoltar ao Menu Principal\x1b[0m

\x1b[1;33m‚Üí Digite o n√∫mero da op√ß√£o (0-4)\x1b[0m
`;
    terminal.current.write(osintMenu);
  };

  const handleAuroraAIOption = async (option) => {
    const term = terminal.current;

    switch (option) {
      case '0':
        showMainMenu();
        setMenuContext('main');
        break;
      case '1':
        // Ativar modo chat AI
        setIsAIChatMode(true);
        setMenuContext('ai_chat');
        term.write('\r\n\x1b[1;35m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m\r\n');
        term.write('\x1b[1;35m‚ïë         ü§ñ AURORA AI - MODO CONVERSACIONAL          ‚ïë\x1b[0m\r\n');
        term.write('\x1b[1;35m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m\r\n\r\n');
        term.write('\x1b[1;36m‚ú® Ol√°! Sou a Aurora, sua assistente de IA com acesso maestro\x1b[0m\r\n');
        term.write('\x1b[1;36m   a TODOS os servi√ßos do V√©rtice via tool calling.\x1b[0m\r\n\r\n');
        term.write('\x1b[0;37müìã Posso ajudar com:\x1b[0m\r\n');
        term.write('\x1b[0;37m  ‚Ä¢ An√°lise de IPs, dom√≠nios, hashes (threat intelligence)\x1b[0m\r\n');
        term.write('\x1b[0;37m  ‚Ä¢ Detec√ß√£o de malware e vulnerabilidades\x1b[0m\r\n');
        term.write('\x1b[0;37m  ‚Ä¢ Verifica√ß√£o de certificados SSL/TLS\x1b[0m\r\n');
        term.write('\x1b[0;37m  ‚Ä¢ Scanning de portas e redes\x1b[0m\r\n');
        term.write('\x1b[0;37m  ‚Ä¢ Investiga√ß√µes OSINT completas\x1b[0m\r\n');
        term.write('\x1b[0;37m  ‚Ä¢ Comandos em linguagem natural\x1b[0m\r\n\r\n');
        term.write('\x1b[1;33müí° Exemplos:\x1b[0m\r\n');
        term.write('\x1b[0;37m  "Analise o IP 8.8.8.8"\x1b[0m\r\n');
        term.write('\x1b[0;37m  "Este hash √© malware? 44d88612..."\x1b[0m\r\n');
        term.write('\x1b[0;37m  "Fa√ßa um scan completo de example.com"\x1b[0m\r\n');
        term.write('\x1b[0;37m  "Investigue o usu√°rio @johndoe"\x1b[0m\r\n\r\n');
        term.write('\x1b[1;31m‚Üí Digite "sair" para voltar ao menu\x1b[0m\r\n\r\n');
        term.write('\x1b[1;32mAurora>\x1b[0m ');
        break;
      case '2':
        term.write('\x1b[1;35müéØ Aurora AI: An√°lise Automatizada\x1b[0m\r\n');
        term.write('\x1b[0;37mForne√ßa o target (IP, dom√≠nio, email, etc):\x1b[0m ');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      case '3':
        term.write('\x1b[1;35müìù Aurora AI: Gerador de Relat√≥rios\x1b[0m\r\n');
        term.write('\x1b[0;37mBuscando an√°lises anteriores...\x1b[0m\r\n');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      case '4':
        term.write('\x1b[1;35müß† Aurora AI: Treinamento\x1b[0m\r\n');
        term.write('\x1b[0;37mEscolha um t√≥pico para aprender:\x1b[0m\r\n');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      default:
        term.write('\x1b[1;31mOp√ß√£o inv√°lida. Digite um n√∫mero de 0 a 4.\x1b[0m\r\n');
        break;
    }
  };

  const handleCyberMenuOption = async (option) => {
    const term = terminal.current;

    switch (option) {
      case '0':
        showMainMenu();
        setMenuContext('main');
        break;
      case '1':
        term.write('\x1b[1;33mDigite o endere√ßo IP para an√°lise:\x1b[0m ');
        // TODO: Aguardar input e executar
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      case '2':
        term.write('\x1b[1;33mDigite o dom√≠nio para an√°lise:\x1b[0m ');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      case '3':
        term.write('\x1b[1;33mDigite o target para scan:\x1b[0m ');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      case '4':
        term.write('\x1b[1;33mDigite o target e exploit_id:\x1b[0m ');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      default:
        term.write('\x1b[1;31mOp√ß√£o inv√°lida. Digite um n√∫mero de 0 a 4.\x1b[0m\r\n');
        break;
    }
  };

  const handleOSINTMenuOption = async (option) => {
    const term = terminal.current;

    switch (option) {
      case '0':
        showMainMenu();
        setMenuContext('main');
        break;
      case '1':
        term.write('\x1b[1;33mDigite o email para an√°lise:\x1b[0m ');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      case '2':
        term.write('\x1b[1;33mDigite o telefone para an√°lise:\x1b[0m ');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      case '3':
        term.write('\x1b[1;33mDigite o username para investiga√ß√£o:\x1b[0m ');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      case '4':
        term.write('\x1b[1;33mDigite a plataforma e username:\x1b[0m ');
        term.write('\x1b[1;31m[EM DESENVOLVIMENTO]\x1b[0m\r\n');
        break;
      default:
        term.write('\x1b[1;31mOp√ß√£o inv√°lida. Digite um n√∫mero de 0 a 4.\x1b[0m\r\n');
        break;
    }
  };

  const executeCyberCommand = async (args) => {
    const [subcommand, ...params] = args;
    const term = terminal.current;

    // Validar argumentos primeiro
    if (!subcommand) {
      term.write(`\x1b[1;31mErro: Comando cyber incompleto. Use: cyber <comando> <argumentos>\x1b[0m\r\n`);
      term.write(`\x1b[1;37mExemplo: cyber ip 8.8.8.8\x1b[0m\r\n`);
      return;
    }

    term.write(`\x1b[1;33mExecutando: cyber ${subcommand} ${params.join(' ')}\x1b[0m\r\n`);

    try {
      // Validar se o comando existe
      const validCommands = ['ip', 'domain', 'scan', 'exploit'];
      if (!validCommands.includes(subcommand)) {
        term.write(`\x1b[1;31mComando cyber n√£o reconhecido: ${subcommand}\x1b[0m\r\n`);
        term.write(`\x1b[1;37mComandos dispon√≠veis: ${validCommands.join(', ')}\x1b[0m\r\n`);
        return;
      }

      // Verificar se tem argumentos suficientes
      if (params.length === 0) {
        term.write(`\x1b[1;31mErro: ${subcommand} requer argumentos\x1b[0m\r\n`);
        term.write(`\x1b[1;37mExemplo: cyber ${subcommand} <target>\x1b[0m\r\n`);
        return;
      }

      const result = await executeCommand('cyber', subcommand, params, getAuthToken());
      if (result) {
        formatAndDisplayResult(result, 'cyber');
      } else {
        term.write(`\x1b[1;33mComando executado, mas sem resultado retornado\x1b[0m\r\n`);
      }
    } catch (error) {
      term.write(`\x1b[1;31mErro ao executar comando: ${error.message}\x1b[0m\r\n`);
      if (error.message.includes('fetch')) {
        term.write(`\x1b[1;33müí° Dica: Verifique se os servi√ßos backend est√£o rodando\x1b[0m\r\n`);
      }
    }
  };

  const executeOSINTCommand = async (args) => {
    const [subcommand, ...params] = args;
    const term = terminal.current;

    // Validar argumentos primeiro
    if (!subcommand) {
      term.write(`\x1b[1;31mErro: Comando osint incompleto. Use: osint <comando> <argumentos>\x1b[0m\r\n`);
      term.write(`\x1b[1;37mExemplo: osint email user@domain.com\x1b[0m\r\n`);
      return;
    }

    term.write(`\x1b[1;33mExecutando: osint ${subcommand} ${params.join(' ')}\x1b[0m\r\n`);

    try {
      // Validar se o comando existe
      const validCommands = ['email', 'phone', 'username', 'social'];
      if (!validCommands.includes(subcommand)) {
        term.write(`\x1b[1;31mComando osint n√£o reconhecido: ${subcommand}\x1b[0m\r\n`);
        term.write(`\x1b[1;37mComandos dispon√≠veis: ${validCommands.join(', ')}\x1b[0m\r\n`);
        return;
      }

      // Verificar se tem argumentos suficientes
      if (params.length === 0) {
        term.write(`\x1b[1;31mErro: ${subcommand} requer argumentos\x1b[0m\r\n`);
        term.write(`\x1b[1;37mExemplo: osint ${subcommand} <target>\x1b[0m\r\n`);
        return;
      }

      const result = await executeCommand('osint', subcommand, params, getAuthToken());
      if (result) {
        formatAndDisplayResult(result, 'osint');
      } else {
        term.write(`\x1b[1;33mComando executado, mas sem resultado retornado\x1b[0m\r\n`);
      }
    } catch (error) {
      term.write(`\x1b[1;31mErro ao executar comando: ${error.message}\x1b[0m\r\n`);
      if (error.message.includes('fetch')) {
        term.write(`\x1b[1;33müí° Dica: Verifique se os servi√ßos backend est√£o rodando\x1b[0m\r\n`);
      }
    }
  };

  const showStatus = async () => {
    const term = terminal.current;
    term.write(`\x1b[1;33mVerificando status dos servi√ßos...\x1b[0m\r\n`);

    const services = [
      { name: 'API Gateway', url: 'http://localhost:8000', status: 'üü¢ Online' },
      { name: 'OSINT Service', url: 'http://localhost:8001', status: 'üü¢ Online' },
      { name: 'IP Intel Service', url: 'http://localhost:8002', status: 'üü¢ Online' },
      { name: 'Vuln Scanner', url: 'http://localhost:8011', status: 'üü° Protegido' },
      { name: 'Social Eng', url: 'http://localhost:8012', status: 'üü° Protegido' }
    ];

    term.write(`\r\n\x1b[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m\r\n`);
    term.write(`\x1b[1;36m‚ïë              STATUS DOS SERVI√áOS              ‚ïë\x1b[0m\r\n`);
    term.write(`\x1b[1;36m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m\r\n`);

    services.forEach(service => {
      const padding = ' '.repeat(20 - service.name.length);
      term.write(`${service.name}${padding}${service.status}\r\n`);
    });
  };

  const formatAndDisplayResult = (result, module, command) => {
    const term = terminal.current;

    term.write(`\x1b[1;32m‚úÖ Opera√ß√£o conclu√≠da com sucesso\x1b[0m\r\n\r\n`);

    // Formata√ß√£o espec√≠fica para cada m√≥dulo
    if (module === 'cyber' && command === 'ip') {
      formatIPAnalysisResult(result);
    } else if (module === 'osint' && command === 'email') {
      formatEmailAnalysisResult(result);
    } else if (module === 'osint' && command === 'phone') {
      formatPhoneAnalysisResult(result);
    } else {
      // Fallback para JSON formatado
      if (typeof result === 'object') {
        term.write(`\x1b[1;37m${JSON.stringify(result, null, 2)}\x1b[0m\r\n`);
      } else {
        term.write(`\x1b[1;37m${result}\x1b[0m\r\n`);
      }
    }
  };

  const formatIPAnalysisResult = (result) => {
    const term = terminal.current;

    term.write(`\x1b[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m\r\n`);
    term.write(`\x1b[1;36m‚ïë                    AN√ÅLISE DE IP                             ‚ïë\x1b[0m\r\n`);
    term.write(`\x1b[1;36m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m\r\n\r\n`);

    // Informa√ß√µes b√°sicas
    term.write(`\x1b[1;33müîç IP Analisado:\x1b[0m \x1b[1;37m${result.ip}\x1b[0m\r\n`);
    if (result.ptr_record) {
      term.write(`\x1b[1;33müì° DNS Reverso:\x1b[0m \x1b[1;37m${result.ptr_record}\x1b[0m\r\n`);
    }
    term.write(`\x1b[1;33m‚è∞ Timestamp:\x1b[0m \x1b[0;37m${result.timestamp}\x1b[0m\r\n\r\n`);

    // Geolocaliza√ß√£o
    if (result.geolocation && result.geolocation.status === 'success') {
      const geo = result.geolocation;
      term.write(`\x1b[1;32müåç GEOLOCALIZA√á√ÉO:\x1b[0m\r\n`);
      term.write(`  \x1b[1;37mPa√≠s:\x1b[0m ${geo.country} (${geo.countryCode})\r\n`);
      term.write(`  \x1b[1;37mRegi√£o:\x1b[0m ${geo.regionName}\r\n`);
      term.write(`  \x1b[1;37mCidade:\x1b[0m ${geo.city}\r\n`);
      term.write(`  \x1b[1;37mCoordenadas:\x1b[0m ${geo.lat}, ${geo.lon}\r\n`);
      term.write(`  \x1b[1;37mISP:\x1b[0m ${geo.isp}\r\n`);
      term.write(`  \x1b[1;37mASN:\x1b[0m ${geo.as}\r\n\r\n`);
    }

    // Reputa√ß√£o
    if (result.reputation) {
      const rep = result.reputation;
      const threatColor = rep.threat_level === 'high' ? '\x1b[1;31m' : rep.threat_level === 'medium' ? '\x1b[1;33m' : '\x1b[1;32m';
      term.write(`\x1b[1;31müõ°Ô∏è REPUTA√á√ÉO DE SEGURAN√áA:\x1b[0m\r\n`);
      term.write(`  \x1b[1;37mScore:\x1b[0m ${rep.score}/100\r\n`);
      term.write(`  \x1b[1;37mN√≠vel de Amea√ßa:\x1b[0m ${threatColor}${rep.threat_level.toUpperCase()}\x1b[0m\r\n`);
      term.write(`  \x1b[1;37m√öltima Detec√ß√£o:\x1b[0m ${rep.last_seen}\r\n\r\n`);
    }

    // Portas abertas
    if (result.open_ports && result.open_ports.length > 0) {
      term.write(`\x1b[1;35müîì PORTAS ABERTAS:\x1b[0m\r\n`);
      result.open_ports.forEach(port => {
        term.write(`  \x1b[1;37m${port}\x1b[0m\r\n`);
      });
    } else {
      term.write(`\x1b[1;32müîí Nenhuma porta aberta detectada\x1b[0m\r\n`);
    }
  };

  const formatEmailAnalysisResult = (result) => {
    const term = terminal.current;

    term.write(`\x1b[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m\r\n`);
    term.write(`\x1b[1;36m‚ïë                   AN√ÅLISE DE EMAIL                           ‚ïë\x1b[0m\r\n`);
    term.write(`\x1b[1;36m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m\r\n\r\n`);

    if (result.data) {
      const data = result.data;
      term.write(`\x1b[1;33müìß Email:\x1b[0m \x1b[1;37m${data.email}\x1b[0m\r\n`);
      term.write(`\x1b[1;33müåê Dom√≠nio:\x1b[0m \x1b[1;37m${data.domain || 'N/A'}\x1b[0m\r\n`);
      term.write(`\x1b[1;33m‚úÖ Formato V√°lido:\x1b[0m ${data.valid_format ? '\x1b[1;32mSim\x1b[0m' : '\x1b[1;31mN√£o\x1b[0m'}\r\n`);
      term.write(`\x1b[1;33müí• Vazamentos:\x1b[0m \x1b[1;37m${data.breaches?.length || 0}\x1b[0m\r\n`);

      if (data.risk_score) {
        const riskColor = data.risk_score.level === 'high' ? '\x1b[1;31m' : data.risk_score.level === 'medium' ? '\x1b[1;33m' : '\x1b[1;32m';
        term.write(`\x1b[1;33m‚ö†Ô∏è N√≠vel de Risco:\x1b[0m ${riskColor}${data.risk_score.level.toUpperCase()}\x1b[0m\r\n`);
      }
    }
  };

  const formatPhoneAnalysisResult = (result) => {
    const term = terminal.current;

    term.write(`\x1b[1;36m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\x1b[0m\r\n`);
    term.write(`\x1b[1;36m‚ïë                  AN√ÅLISE DE TELEFONE                         ‚ïë\x1b[0m\r\n`);
    term.write(`\x1b[1;36m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\x1b[0m\r\n\r\n`);

    if (result.data) {
      const data = result.data;
      term.write(`\x1b[1;33müì± Telefone:\x1b[0m \x1b[1;37m${data.phone}\x1b[0m\r\n`);
      term.write(`\x1b[1;33müåç Pa√≠s:\x1b[0m \x1b[1;37m${data.location?.country || 'N/A'}\x1b[0m\r\n`);
      term.write(`\x1b[1;33müì° Operadora:\x1b[0m \x1b[1;37m${data.carrier?.name || 'N/A'}\x1b[0m\r\n`);
      term.write(`\x1b[1;33müìã Tipo:\x1b[0m \x1b[1;37m${data.line_type || 'N/A'}\x1b[0m\r\n`);
    }
  };

  return (
    <div
      ref={terminalRef}
      className="flex-1 p-4"
      style={{ height: isFullscreen ? 'calc(100vh - 120px)' : 'calc(100vh - 200px)' }}
    />
  );
};

export default TerminalEmulator;