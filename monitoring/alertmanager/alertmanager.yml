# FASE 7: Alertmanager Configuration

global:
  resolve_timeout: 5m

# Route tree
route:
  group_by: ['alertname', 'severity', 'layer']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  receiver: 'default-receiver'

  # Child routes
  routes:
    # Critical alerts → immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 1h

    # Warning alerts → batched notification
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      repeat_interval: 4h

    # SLO violations → dedicated channel
    - match_re:
        alertname: '^SLO.*'
      receiver: 'slo-alerts'
      group_wait: 10s
      repeat_interval: 6h

# Receivers
receivers:
  - name: 'default-receiver'
    webhook_configs:
      - url: 'http://localhost:5001/alerts/default'
        send_resolved: true

  - name: 'critical-alerts'
    webhook_configs:
      - url: 'http://localhost:5001/alerts/critical'
        send_resolved: true
    # Uncomment for PagerDuty integration
    # pagerduty_configs:
    #   - service_key: '<PAGERDUTY_SERVICE_KEY>'
    #     description: '{{ .GroupLabels.alertname }}'

  - name: 'warning-alerts'
    webhook_configs:
      - url: 'http://localhost:5001/alerts/warning'
        send_resolved: true

  - name: 'slo-alerts'
    webhook_configs:
      - url: 'http://localhost:5001/alerts/slo'
        send_resolved: true

# Inhibition rules (suppress certain alerts)
inhibit_rules:
  # Suppress warning if critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'instance']

  # Suppress individual service alerts if entire cluster is down
  - source_match:
      alertname: 'ClusterDown'
    target_match_re:
      alertname: '.*ServiceDown.*'
