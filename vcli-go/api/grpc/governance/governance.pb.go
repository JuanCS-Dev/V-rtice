// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.1
// source: governance.proto

package governance

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DecisionEvent_EventType int32

const (
	DecisionEvent_NEW_DECISION      DecisionEvent_EventType = 0
	DecisionEvent_DECISION_UPDATED  DecisionEvent_EventType = 1
	DecisionEvent_DECISION_RESOLVED DecisionEvent_EventType = 2
)

// Enum value maps for DecisionEvent_EventType.
var (
	DecisionEvent_EventType_name = map[int32]string{
		0: "NEW_DECISION",
		1: "DECISION_UPDATED",
		2: "DECISION_RESOLVED",
	}
	DecisionEvent_EventType_value = map[string]int32{
		"NEW_DECISION":      0,
		"DECISION_UPDATED":  1,
		"DECISION_RESOLVED": 2,
	}
)

func (x DecisionEvent_EventType) Enum() *DecisionEvent_EventType {
	p := new(DecisionEvent_EventType)
	*p = x
	return p
}

func (x DecisionEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DecisionEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_governance_proto_enumTypes[0].Descriptor()
}

func (DecisionEvent_EventType) Type() protoreflect.EnumType {
	return &file_governance_proto_enumTypes[0]
}

func (x DecisionEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DecisionEvent_EventType.Descriptor instead.
func (DecisionEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{21, 0}
}

type GovernanceEvent_EventType int32

const (
	GovernanceEvent_CONNECTION_ESTABLISHED GovernanceEvent_EventType = 0
	GovernanceEvent_CONNECTION_LOST        GovernanceEvent_EventType = 1
	GovernanceEvent_METRICS_UPDATED        GovernanceEvent_EventType = 2
	GovernanceEvent_ERROR                  GovernanceEvent_EventType = 3
)

// Enum value maps for GovernanceEvent_EventType.
var (
	GovernanceEvent_EventType_name = map[int32]string{
		0: "CONNECTION_ESTABLISHED",
		1: "CONNECTION_LOST",
		2: "METRICS_UPDATED",
		3: "ERROR",
	}
	GovernanceEvent_EventType_value = map[string]int32{
		"CONNECTION_ESTABLISHED": 0,
		"CONNECTION_LOST":        1,
		"METRICS_UPDATED":        2,
		"ERROR":                  3,
	}
)

func (x GovernanceEvent_EventType) Enum() *GovernanceEvent_EventType {
	p := new(GovernanceEvent_EventType)
	*p = x
	return p
}

func (x GovernanceEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GovernanceEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_governance_proto_enumTypes[1].Descriptor()
}

func (GovernanceEvent_EventType) Type() protoreflect.EnumType {
	return &file_governance_proto_enumTypes[1]
}

func (x GovernanceEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GovernanceEvent_EventType.Descriptor instead.
func (GovernanceEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{23, 0}
}

// Health Check
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_governance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_governance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

// Session Management
type CreateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    string                 `protobuf:"bytes,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_governance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSessionRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_governance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CreateSessionResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CloseSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseSessionRequest) Reset() {
	*x = CloseSessionRequest{}
	mi := &file_governance_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionRequest) ProtoMessage() {}

func (x *CloseSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionRequest.ProtoReflect.Descriptor instead.
func (*CloseSessionRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{4}
}

func (x *CloseSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CloseSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseSessionResponse) Reset() {
	*x = CloseSessionResponse{}
	mi := &file_governance_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResponse) ProtoMessage() {}

func (x *CloseSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResponse.ProtoReflect.Descriptor instead.
func (*CloseSessionResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{5}
}

func (x *CloseSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Decision Operations
type ListPendingDecisionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`     // PENDING, APPROVED, REJECTED, ESCALATED
	Priority      string                 `protobuf:"bytes,4,opt,name=priority,proto3" json:"priority,omitempty"` // CRITICAL, HIGH, MEDIUM, LOW
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPendingDecisionsRequest) Reset() {
	*x = ListPendingDecisionsRequest{}
	mi := &file_governance_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPendingDecisionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPendingDecisionsRequest) ProtoMessage() {}

func (x *ListPendingDecisionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPendingDecisionsRequest.ProtoReflect.Descriptor instead.
func (*ListPendingDecisionsRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{6}
}

func (x *ListPendingDecisionsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ListPendingDecisionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPendingDecisionsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListPendingDecisionsRequest) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

type ListPendingDecisionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Decisions     []*Decision            `protobuf:"bytes,1,rep,name=decisions,proto3" json:"decisions,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPendingDecisionsResponse) Reset() {
	*x = ListPendingDecisionsResponse{}
	mi := &file_governance_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPendingDecisionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPendingDecisionsResponse) ProtoMessage() {}

func (x *ListPendingDecisionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPendingDecisionsResponse.ProtoReflect.Descriptor instead.
func (*ListPendingDecisionsResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{7}
}

func (x *ListPendingDecisionsResponse) GetDecisions() []*Decision {
	if x != nil {
		return x.Decisions
	}
	return nil
}

func (x *ListPendingDecisionsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetDecisionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DecisionId    string                 `protobuf:"bytes,1,opt,name=decision_id,json=decisionId,proto3" json:"decision_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDecisionRequest) Reset() {
	*x = GetDecisionRequest{}
	mi := &file_governance_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionRequest) ProtoMessage() {}

func (x *GetDecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionRequest.ProtoReflect.Descriptor instead.
func (*GetDecisionRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{8}
}

func (x *GetDecisionRequest) GetDecisionId() string {
	if x != nil {
		return x.DecisionId
	}
	return ""
}

type GetDecisionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Decision      *Decision              `protobuf:"bytes,1,opt,name=decision,proto3" json:"decision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDecisionResponse) Reset() {
	*x = GetDecisionResponse{}
	mi := &file_governance_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionResponse) ProtoMessage() {}

func (x *GetDecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionResponse.ProtoReflect.Descriptor instead.
func (*GetDecisionResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{9}
}

func (x *GetDecisionResponse) GetDecision() *Decision {
	if x != nil {
		return x.Decision
	}
	return nil
}

type ApproveDecisionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DecisionId    string                 `protobuf:"bytes,2,opt,name=decision_id,json=decisionId,proto3" json:"decision_id,omitempty"`
	Comment       string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Reasoning     string                 `protobuf:"bytes,4,opt,name=reasoning,proto3" json:"reasoning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveDecisionRequest) Reset() {
	*x = ApproveDecisionRequest{}
	mi := &file_governance_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveDecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveDecisionRequest) ProtoMessage() {}

func (x *ApproveDecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveDecisionRequest.ProtoReflect.Descriptor instead.
func (*ApproveDecisionRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{10}
}

func (x *ApproveDecisionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ApproveDecisionRequest) GetDecisionId() string {
	if x != nil {
		return x.DecisionId
	}
	return ""
}

func (x *ApproveDecisionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ApproveDecisionRequest) GetReasoning() string {
	if x != nil {
		return x.Reasoning
	}
	return ""
}

type ApproveDecisionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ProcessedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveDecisionResponse) Reset() {
	*x = ApproveDecisionResponse{}
	mi := &file_governance_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveDecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveDecisionResponse) ProtoMessage() {}

func (x *ApproveDecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveDecisionResponse.ProtoReflect.Descriptor instead.
func (*ApproveDecisionResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{11}
}

func (x *ApproveDecisionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ApproveDecisionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApproveDecisionResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

type RejectDecisionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DecisionId    string                 `protobuf:"bytes,2,opt,name=decision_id,json=decisionId,proto3" json:"decision_id,omitempty"`
	Comment       string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Reasoning     string                 `protobuf:"bytes,4,opt,name=reasoning,proto3" json:"reasoning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectDecisionRequest) Reset() {
	*x = RejectDecisionRequest{}
	mi := &file_governance_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectDecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectDecisionRequest) ProtoMessage() {}

func (x *RejectDecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectDecisionRequest.ProtoReflect.Descriptor instead.
func (*RejectDecisionRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{12}
}

func (x *RejectDecisionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RejectDecisionRequest) GetDecisionId() string {
	if x != nil {
		return x.DecisionId
	}
	return ""
}

func (x *RejectDecisionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RejectDecisionRequest) GetReasoning() string {
	if x != nil {
		return x.Reasoning
	}
	return ""
}

type RejectDecisionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ProcessedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectDecisionResponse) Reset() {
	*x = RejectDecisionResponse{}
	mi := &file_governance_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectDecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectDecisionResponse) ProtoMessage() {}

func (x *RejectDecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectDecisionResponse.ProtoReflect.Descriptor instead.
func (*RejectDecisionResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{13}
}

func (x *RejectDecisionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RejectDecisionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RejectDecisionResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

type EscalateDecisionRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SessionId        string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DecisionId       string                 `protobuf:"bytes,2,opt,name=decision_id,json=decisionId,proto3" json:"decision_id,omitempty"`
	Reason           string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	EscalationTarget string                 `protobuf:"bytes,4,opt,name=escalation_target,json=escalationTarget,proto3" json:"escalation_target,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EscalateDecisionRequest) Reset() {
	*x = EscalateDecisionRequest{}
	mi := &file_governance_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EscalateDecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalateDecisionRequest) ProtoMessage() {}

func (x *EscalateDecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalateDecisionRequest.ProtoReflect.Descriptor instead.
func (*EscalateDecisionRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{14}
}

func (x *EscalateDecisionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *EscalateDecisionRequest) GetDecisionId() string {
	if x != nil {
		return x.DecisionId
	}
	return ""
}

func (x *EscalateDecisionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *EscalateDecisionRequest) GetEscalationTarget() string {
	if x != nil {
		return x.EscalationTarget
	}
	return ""
}

type EscalateDecisionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ProcessedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EscalateDecisionResponse) Reset() {
	*x = EscalateDecisionResponse{}
	mi := &file_governance_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EscalateDecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscalateDecisionResponse) ProtoMessage() {}

func (x *EscalateDecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscalateDecisionResponse.ProtoReflect.Descriptor instead.
func (*EscalateDecisionResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{15}
}

func (x *EscalateDecisionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EscalateDecisionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EscalateDecisionResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

// Metrics
type GetMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	mi := &file_governance_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{16}
}

func (x *GetMetricsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       *DecisionMetrics       `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsResponse) Reset() {
	*x = GetMetricsResponse{}
	mi := &file_governance_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsResponse) ProtoMessage() {}

func (x *GetMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{17}
}

func (x *GetMetricsResponse) GetMetrics() *DecisionMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetSessionStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    string                 `protobuf:"bytes,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionStatsRequest) Reset() {
	*x = GetSessionStatsRequest{}
	mi := &file_governance_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionStatsRequest) ProtoMessage() {}

func (x *GetSessionStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionStatsRequest.ProtoReflect.Descriptor instead.
func (*GetSessionStatsRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{18}
}

func (x *GetSessionStatsRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

type GetSessionStatsResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TotalDecisions         int32                  `protobuf:"varint,1,opt,name=total_decisions,json=totalDecisions,proto3" json:"total_decisions,omitempty"`
	Approved               int32                  `protobuf:"varint,2,opt,name=approved,proto3" json:"approved,omitempty"`
	Rejected               int32                  `protobuf:"varint,3,opt,name=rejected,proto3" json:"rejected,omitempty"`
	Escalated              int32                  `protobuf:"varint,4,opt,name=escalated,proto3" json:"escalated,omitempty"`
	AvgResponseTimeSeconds float64                `protobuf:"fixed64,5,opt,name=avg_response_time_seconds,json=avgResponseTimeSeconds,proto3" json:"avg_response_time_seconds,omitempty"`
	SessionStart           *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=session_start,json=sessionStart,proto3" json:"session_start,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetSessionStatsResponse) Reset() {
	*x = GetSessionStatsResponse{}
	mi := &file_governance_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionStatsResponse) ProtoMessage() {}

func (x *GetSessionStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionStatsResponse.ProtoReflect.Descriptor instead.
func (*GetSessionStatsResponse) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{19}
}

func (x *GetSessionStatsResponse) GetTotalDecisions() int32 {
	if x != nil {
		return x.TotalDecisions
	}
	return 0
}

func (x *GetSessionStatsResponse) GetApproved() int32 {
	if x != nil {
		return x.Approved
	}
	return 0
}

func (x *GetSessionStatsResponse) GetRejected() int32 {
	if x != nil {
		return x.Rejected
	}
	return 0
}

func (x *GetSessionStatsResponse) GetEscalated() int32 {
	if x != nil {
		return x.Escalated
	}
	return 0
}

func (x *GetSessionStatsResponse) GetAvgResponseTimeSeconds() float64 {
	if x != nil {
		return x.AvgResponseTimeSeconds
	}
	return 0
}

func (x *GetSessionStatsResponse) GetSessionStart() *timestamppb.Timestamp {
	if x != nil {
		return x.SessionStart
	}
	return nil
}

// Streaming
type StreamDecisionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamDecisionsRequest) Reset() {
	*x = StreamDecisionsRequest{}
	mi := &file_governance_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamDecisionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDecisionsRequest) ProtoMessage() {}

func (x *StreamDecisionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDecisionsRequest.ProtoReflect.Descriptor instead.
func (*StreamDecisionsRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{20}
}

func (x *StreamDecisionsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type DecisionEvent struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Type          DecisionEvent_EventType `protobuf:"varint,1,opt,name=type,proto3,enum=vertice.governance.v1.DecisionEvent_EventType" json:"type,omitempty"`
	Decision      *Decision               `protobuf:"bytes,2,opt,name=decision,proto3" json:"decision,omitempty"`
	Timestamp     *timestamppb.Timestamp  `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionEvent) Reset() {
	*x = DecisionEvent{}
	mi := &file_governance_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionEvent) ProtoMessage() {}

func (x *DecisionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionEvent.ProtoReflect.Descriptor instead.
func (*DecisionEvent) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{21}
}

func (x *DecisionEvent) GetType() DecisionEvent_EventType {
	if x != nil {
		return x.Type
	}
	return DecisionEvent_NEW_DECISION
}

func (x *DecisionEvent) GetDecision() *Decision {
	if x != nil {
		return x.Decision
	}
	return nil
}

func (x *DecisionEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type StreamEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsRequest) Reset() {
	*x = StreamEventsRequest{}
	mi := &file_governance_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest) ProtoMessage() {}

func (x *StreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{22}
}

func (x *StreamEventsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GovernanceEvent struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Type          GovernanceEvent_EventType `protobuf:"varint,1,opt,name=type,proto3,enum=vertice.governance.v1.GovernanceEvent_EventType" json:"type,omitempty"`
	Message       string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Metrics       *DecisionMetrics          `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Timestamp     *timestamppb.Timestamp    `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GovernanceEvent) Reset() {
	*x = GovernanceEvent{}
	mi := &file_governance_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GovernanceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GovernanceEvent) ProtoMessage() {}

func (x *GovernanceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GovernanceEvent.ProtoReflect.Descriptor instead.
func (*GovernanceEvent) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{23}
}

func (x *GovernanceEvent) GetType() GovernanceEvent_EventType {
	if x != nil {
		return x.Type
	}
	return GovernanceEvent_CONNECTION_ESTABLISHED
}

func (x *GovernanceEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GovernanceEvent) GetMetrics() *DecisionMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GovernanceEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Data Models
type Decision struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DecisionId         string                 `protobuf:"bytes,1,opt,name=decision_id,json=decisionId,proto3" json:"decision_id,omitempty"`
	OperationType      string                 `protobuf:"bytes,2,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	Context            map[string]string      `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RiskAssessment     *Risk                  `protobuf:"bytes,4,opt,name=risk_assessment,json=riskAssessment,proto3" json:"risk_assessment,omitempty"`
	EthicalAssessment  *EthicalAssessment     `protobuf:"bytes,5,opt,name=ethical_assessment,json=ethicalAssessment,proto3" json:"ethical_assessment,omitempty"`
	Status             string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`     // PENDING, APPROVED, REJECTED, ESCALATED
	Priority           string                 `protobuf:"bytes,7,opt,name=priority,proto3" json:"priority,omitempty"` // CRITICAL, HIGH, MEDIUM, LOW
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	SlaSeconds         int32                  `protobuf:"varint,10,opt,name=sla_seconds,json=slaSeconds,proto3" json:"sla_seconds,omitempty"`
	AssignedOperator   string                 `protobuf:"bytes,11,opt,name=assigned_operator,json=assignedOperator,proto3" json:"assigned_operator,omitempty"`
	RecommendedActions []*Action              `protobuf:"bytes,12,rep,name=recommended_actions,json=recommendedActions,proto3" json:"recommended_actions,omitempty"`
	History            *DecisionHistory       `protobuf:"bytes,13,opt,name=history,proto3" json:"history,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Decision) Reset() {
	*x = Decision{}
	mi := &file_governance_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decision) ProtoMessage() {}

func (x *Decision) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decision.ProtoReflect.Descriptor instead.
func (*Decision) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{24}
}

func (x *Decision) GetDecisionId() string {
	if x != nil {
		return x.DecisionId
	}
	return ""
}

func (x *Decision) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *Decision) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Decision) GetRiskAssessment() *Risk {
	if x != nil {
		return x.RiskAssessment
	}
	return nil
}

func (x *Decision) GetEthicalAssessment() *EthicalAssessment {
	if x != nil {
		return x.EthicalAssessment
	}
	return nil
}

func (x *Decision) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Decision) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *Decision) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Decision) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Decision) GetSlaSeconds() int32 {
	if x != nil {
		return x.SlaSeconds
	}
	return 0
}

func (x *Decision) GetAssignedOperator() string {
	if x != nil {
		return x.AssignedOperator
	}
	return ""
}

func (x *Decision) GetRecommendedActions() []*Action {
	if x != nil {
		return x.RecommendedActions
	}
	return nil
}

func (x *Decision) GetHistory() *DecisionHistory {
	if x != nil {
		return x.History
	}
	return nil
}

type Risk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Score         float64                `protobuf:"fixed64,1,opt,name=score,proto3" json:"score,omitempty"` // 0.0 to 1.0
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`   // CRITICAL, HIGH, MEDIUM, LOW
	Factors       []string               `protobuf:"bytes,3,rep,name=factors,proto3" json:"factors,omitempty"`
	Details       map[string]string      `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Risk) Reset() {
	*x = Risk{}
	mi := &file_governance_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Risk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk) ProtoMessage() {}

func (x *Risk) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk.ProtoReflect.Descriptor instead.
func (*Risk) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{25}
}

func (x *Risk) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Risk) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Risk) GetFactors() []string {
	if x != nil {
		return x.Factors
	}
	return nil
}

func (x *Risk) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

type EthicalAssessment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Principles    []*EthicalPrinciple    `protobuf:"bytes,1,rep,name=principles,proto3" json:"principles,omitempty"`
	Concerns      []string               `protobuf:"bytes,2,rep,name=concerns,proto3" json:"concerns,omitempty"`
	Confidence    float64                `protobuf:"fixed64,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Reasoning     string                 `protobuf:"bytes,4,opt,name=reasoning,proto3" json:"reasoning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EthicalAssessment) Reset() {
	*x = EthicalAssessment{}
	mi := &file_governance_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EthicalAssessment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthicalAssessment) ProtoMessage() {}

func (x *EthicalAssessment) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthicalAssessment.ProtoReflect.Descriptor instead.
func (*EthicalAssessment) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{26}
}

func (x *EthicalAssessment) GetPrinciples() []*EthicalPrinciple {
	if x != nil {
		return x.Principles
	}
	return nil
}

func (x *EthicalAssessment) GetConcerns() []string {
	if x != nil {
		return x.Concerns
	}
	return nil
}

func (x *EthicalAssessment) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *EthicalAssessment) GetReasoning() string {
	if x != nil {
		return x.Reasoning
	}
	return ""
}

type EthicalPrinciple struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Violated      bool                   `protobuf:"varint,2,opt,name=violated,proto3" json:"violated,omitempty"`
	Severity      float64                `protobuf:"fixed64,3,opt,name=severity,proto3" json:"severity,omitempty"`
	Explanation   string                 `protobuf:"bytes,4,opt,name=explanation,proto3" json:"explanation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EthicalPrinciple) Reset() {
	*x = EthicalPrinciple{}
	mi := &file_governance_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EthicalPrinciple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthicalPrinciple) ProtoMessage() {}

func (x *EthicalPrinciple) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthicalPrinciple.ProtoReflect.Descriptor instead.
func (*EthicalPrinciple) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{27}
}

func (x *EthicalPrinciple) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EthicalPrinciple) GetViolated() bool {
	if x != nil {
		return x.Violated
	}
	return false
}

func (x *EthicalPrinciple) GetSeverity() float64 {
	if x != nil {
		return x.Severity
	}
	return 0
}

func (x *EthicalPrinciple) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionType    string                 `protobuf:"bytes,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Confidence    float64                `protobuf:"fixed64,4,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_governance_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{28}
}

func (x *Action) GetActionType() string {
	if x != nil {
		return x.ActionType
	}
	return ""
}

func (x *Action) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Action) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Action) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type DecisionHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmittedAt   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	ReviewedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=reviewed_at,json=reviewedAt,proto3" json:"reviewed_at,omitempty"`
	ReviewedBy    string                 `protobuf:"bytes,3,opt,name=reviewed_by,json=reviewedBy,proto3" json:"reviewed_by,omitempty"`
	Outcome       string                 `protobuf:"bytes,4,opt,name=outcome,proto3" json:"outcome,omitempty"`
	Comment       string                 `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionHistory) Reset() {
	*x = DecisionHistory{}
	mi := &file_governance_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionHistory) ProtoMessage() {}

func (x *DecisionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionHistory.ProtoReflect.Descriptor instead.
func (*DecisionHistory) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{29}
}

func (x *DecisionHistory) GetSubmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *DecisionHistory) GetReviewedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReviewedAt
	}
	return nil
}

func (x *DecisionHistory) GetReviewedBy() string {
	if x != nil {
		return x.ReviewedBy
	}
	return ""
}

func (x *DecisionHistory) GetOutcome() string {
	if x != nil {
		return x.Outcome
	}
	return ""
}

func (x *DecisionHistory) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type DecisionMetrics struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	PendingCount           int32                  `protobuf:"varint,1,opt,name=pending_count,json=pendingCount,proto3" json:"pending_count,omitempty"`
	TotalDecisions         int32                  `protobuf:"varint,2,opt,name=total_decisions,json=totalDecisions,proto3" json:"total_decisions,omitempty"`
	ApprovedCount          int32                  `protobuf:"varint,3,opt,name=approved_count,json=approvedCount,proto3" json:"approved_count,omitempty"`
	RejectedCount          int32                  `protobuf:"varint,4,opt,name=rejected_count,json=rejectedCount,proto3" json:"rejected_count,omitempty"`
	EscalatedCount         int32                  `protobuf:"varint,5,opt,name=escalated_count,json=escalatedCount,proto3" json:"escalated_count,omitempty"`
	CriticalCount          int32                  `protobuf:"varint,6,opt,name=critical_count,json=criticalCount,proto3" json:"critical_count,omitempty"`
	HighPriorityCount      int32                  `protobuf:"varint,7,opt,name=high_priority_count,json=highPriorityCount,proto3" json:"high_priority_count,omitempty"`
	AvgResponseTimeSeconds float64                `protobuf:"fixed64,8,opt,name=avg_response_time_seconds,json=avgResponseTimeSeconds,proto3" json:"avg_response_time_seconds,omitempty"`
	ApprovalRate           float64                `protobuf:"fixed64,9,opt,name=approval_rate,json=approvalRate,proto3" json:"approval_rate,omitempty"`
	SlaViolations          int32                  `protobuf:"varint,10,opt,name=sla_violations,json=slaViolations,proto3" json:"sla_violations,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DecisionMetrics) Reset() {
	*x = DecisionMetrics{}
	mi := &file_governance_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionMetrics) ProtoMessage() {}

func (x *DecisionMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_governance_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionMetrics.ProtoReflect.Descriptor instead.
func (*DecisionMetrics) Descriptor() ([]byte, []int) {
	return file_governance_proto_rawDescGZIP(), []int{30}
}

func (x *DecisionMetrics) GetPendingCount() int32 {
	if x != nil {
		return x.PendingCount
	}
	return 0
}

func (x *DecisionMetrics) GetTotalDecisions() int32 {
	if x != nil {
		return x.TotalDecisions
	}
	return 0
}

func (x *DecisionMetrics) GetApprovedCount() int32 {
	if x != nil {
		return x.ApprovedCount
	}
	return 0
}

func (x *DecisionMetrics) GetRejectedCount() int32 {
	if x != nil {
		return x.RejectedCount
	}
	return 0
}

func (x *DecisionMetrics) GetEscalatedCount() int32 {
	if x != nil {
		return x.EscalatedCount
	}
	return 0
}

func (x *DecisionMetrics) GetCriticalCount() int32 {
	if x != nil {
		return x.CriticalCount
	}
	return 0
}

func (x *DecisionMetrics) GetHighPriorityCount() int32 {
	if x != nil {
		return x.HighPriorityCount
	}
	return 0
}

func (x *DecisionMetrics) GetAvgResponseTimeSeconds() float64 {
	if x != nil {
		return x.AvgResponseTimeSeconds
	}
	return 0
}

func (x *DecisionMetrics) GetApprovalRate() float64 {
	if x != nil {
		return x.ApprovalRate
	}
	return 0
}

func (x *DecisionMetrics) GetSlaViolations() int32 {
	if x != nil {
		return x.SlaViolations
	}
	return 0
}

var File_governance_proto protoreflect.FileDescriptor

const file_governance_proto_rawDesc = "" +
	"\n" +
	"\x10governance.proto\x12\x15vertice.governance.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x14\n" +
	"\x12HealthCheckRequest\"n\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12%\n" +
	"\x0euptime_seconds\x18\x03 \x01(\x03R\ruptimeSeconds\"7\n" +
	"\x14CreateSessionRequest\x12\x1f\n" +
	"\voperator_id\x18\x01 \x01(\tR\n" +
	"operatorId\"q\n" +
	"\x15CreateSessionResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"4\n" +
	"\x13CloseSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"0\n" +
	"\x14CloseSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x86\x01\n" +
	"\x1bListPendingDecisionsRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\tR\bpriority\"~\n" +
	"\x1cListPendingDecisionsResponse\x12=\n" +
	"\tdecisions\x18\x01 \x03(\v2\x1f.vertice.governance.v1.DecisionR\tdecisions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"5\n" +
	"\x12GetDecisionRequest\x12\x1f\n" +
	"\vdecision_id\x18\x01 \x01(\tR\n" +
	"decisionId\"R\n" +
	"\x13GetDecisionResponse\x12;\n" +
	"\bdecision\x18\x01 \x01(\v2\x1f.vertice.governance.v1.DecisionR\bdecision\"\x90\x01\n" +
	"\x16ApproveDecisionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vdecision_id\x18\x02 \x01(\tR\n" +
	"decisionId\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\x12\x1c\n" +
	"\treasoning\x18\x04 \x01(\tR\treasoning\"\x8c\x01\n" +
	"\x17ApproveDecisionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12=\n" +
	"\fprocessed_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\"\x8f\x01\n" +
	"\x15RejectDecisionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vdecision_id\x18\x02 \x01(\tR\n" +
	"decisionId\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\x12\x1c\n" +
	"\treasoning\x18\x04 \x01(\tR\treasoning\"\x8b\x01\n" +
	"\x16RejectDecisionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12=\n" +
	"\fprocessed_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\"\x9e\x01\n" +
	"\x17EscalateDecisionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vdecision_id\x18\x02 \x01(\tR\n" +
	"decisionId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12+\n" +
	"\x11escalation_target\x18\x04 \x01(\tR\x10escalationTarget\"\x8d\x01\n" +
	"\x18EscalateDecisionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12=\n" +
	"\fprocessed_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\"2\n" +
	"\x11GetMetricsRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"V\n" +
	"\x12GetMetricsResponse\x12@\n" +
	"\ametrics\x18\x01 \x01(\v2&.vertice.governance.v1.DecisionMetricsR\ametrics\"9\n" +
	"\x16GetSessionStatsRequest\x12\x1f\n" +
	"\voperator_id\x18\x01 \x01(\tR\n" +
	"operatorId\"\x94\x02\n" +
	"\x17GetSessionStatsResponse\x12'\n" +
	"\x0ftotal_decisions\x18\x01 \x01(\x05R\x0etotalDecisions\x12\x1a\n" +
	"\bapproved\x18\x02 \x01(\x05R\bapproved\x12\x1a\n" +
	"\brejected\x18\x03 \x01(\x05R\brejected\x12\x1c\n" +
	"\tescalated\x18\x04 \x01(\x05R\tescalated\x129\n" +
	"\x19avg_response_time_seconds\x18\x05 \x01(\x01R\x16avgResponseTimeSeconds\x12?\n" +
	"\rsession_start\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\fsessionStart\"7\n" +
	"\x16StreamDecisionsRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\x96\x02\n" +
	"\rDecisionEvent\x12B\n" +
	"\x04type\x18\x01 \x01(\x0e2..vertice.governance.v1.DecisionEvent.EventTypeR\x04type\x12;\n" +
	"\bdecision\x18\x02 \x01(\v2\x1f.vertice.governance.v1.DecisionR\bdecision\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"J\n" +
	"\tEventType\x12\x10\n" +
	"\fNEW_DECISION\x10\x00\x12\x14\n" +
	"\x10DECISION_UPDATED\x10\x01\x12\x15\n" +
	"\x11DECISION_RESOLVED\x10\x02\"4\n" +
	"\x13StreamEventsRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\xcb\x02\n" +
	"\x0fGovernanceEvent\x12D\n" +
	"\x04type\x18\x01 \x01(\x0e20.vertice.governance.v1.GovernanceEvent.EventTypeR\x04type\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12@\n" +
	"\ametrics\x18\x03 \x01(\v2&.vertice.governance.v1.DecisionMetricsR\ametrics\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\\\n" +
	"\tEventType\x12\x1a\n" +
	"\x16CONNECTION_ESTABLISHED\x10\x00\x12\x13\n" +
	"\x0fCONNECTION_LOST\x10\x01\x12\x13\n" +
	"\x0fMETRICS_UPDATED\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\"\xff\x05\n" +
	"\bDecision\x12\x1f\n" +
	"\vdecision_id\x18\x01 \x01(\tR\n" +
	"decisionId\x12%\n" +
	"\x0eoperation_type\x18\x02 \x01(\tR\roperationType\x12F\n" +
	"\acontext\x18\x03 \x03(\v2,.vertice.governance.v1.Decision.ContextEntryR\acontext\x12D\n" +
	"\x0frisk_assessment\x18\x04 \x01(\v2\x1b.vertice.governance.v1.RiskR\x0eriskAssessment\x12W\n" +
	"\x12ethical_assessment\x18\x05 \x01(\v2(.vertice.governance.v1.EthicalAssessmentR\x11ethicalAssessment\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1a\n" +
	"\bpriority\x18\a \x01(\tR\bpriority\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"expires_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\x1f\n" +
	"\vsla_seconds\x18\n" +
	" \x01(\x05R\n" +
	"slaSeconds\x12+\n" +
	"\x11assigned_operator\x18\v \x01(\tR\x10assignedOperator\x12N\n" +
	"\x13recommended_actions\x18\f \x03(\v2\x1d.vertice.governance.v1.ActionR\x12recommendedActions\x12@\n" +
	"\ahistory\x18\r \x01(\v2&.vertice.governance.v1.DecisionHistoryR\ahistory\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcc\x01\n" +
	"\x04Risk\x12\x14\n" +
	"\x05score\x18\x01 \x01(\x01R\x05score\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x18\n" +
	"\afactors\x18\x03 \x03(\tR\afactors\x12B\n" +
	"\adetails\x18\x04 \x03(\v2(.vertice.governance.v1.Risk.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x01\n" +
	"\x11EthicalAssessment\x12G\n" +
	"\n" +
	"principles\x18\x01 \x03(\v2'.vertice.governance.v1.EthicalPrincipleR\n" +
	"principles\x12\x1a\n" +
	"\bconcerns\x18\x02 \x03(\tR\bconcerns\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x01R\n" +
	"confidence\x12\x1c\n" +
	"\treasoning\x18\x04 \x01(\tR\treasoning\"\x80\x01\n" +
	"\x10EthicalPrinciple\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bviolated\x18\x02 \x01(\bR\bviolated\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\x01R\bseverity\x12 \n" +
	"\vexplanation\x18\x04 \x01(\tR\vexplanation\"\xf9\x01\n" +
	"\x06Action\x12\x1f\n" +
	"\vaction_type\x18\x01 \x01(\tR\n" +
	"actionType\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12M\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2-.vertice.governance.v1.Action.ParametersEntryR\n" +
	"parameters\x12\x1e\n" +
	"\n" +
	"confidence\x18\x04 \x01(\x01R\n" +
	"confidence\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe2\x01\n" +
	"\x0fDecisionHistory\x12=\n" +
	"\fsubmitted_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vsubmittedAt\x12;\n" +
	"\vreviewed_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"reviewedAt\x12\x1f\n" +
	"\vreviewed_by\x18\x03 \x01(\tR\n" +
	"reviewedBy\x12\x18\n" +
	"\aoutcome\x18\x04 \x01(\tR\aoutcome\x12\x18\n" +
	"\acomment\x18\x05 \x01(\tR\acomment\"\xb4\x03\n" +
	"\x0fDecisionMetrics\x12#\n" +
	"\rpending_count\x18\x01 \x01(\x05R\fpendingCount\x12'\n" +
	"\x0ftotal_decisions\x18\x02 \x01(\x05R\x0etotalDecisions\x12%\n" +
	"\x0eapproved_count\x18\x03 \x01(\x05R\rapprovedCount\x12%\n" +
	"\x0erejected_count\x18\x04 \x01(\x05R\rrejectedCount\x12'\n" +
	"\x0fescalated_count\x18\x05 \x01(\x05R\x0eescalatedCount\x12%\n" +
	"\x0ecritical_count\x18\x06 \x01(\x05R\rcriticalCount\x12.\n" +
	"\x13high_priority_count\x18\a \x01(\x05R\x11highPriorityCount\x129\n" +
	"\x19avg_response_time_seconds\x18\b \x01(\x01R\x16avgResponseTimeSeconds\x12#\n" +
	"\rapproval_rate\x18\t \x01(\x01R\fapprovalRate\x12%\n" +
	"\x0esla_violations\x18\n" +
	" \x01(\x05R\rslaViolations2\xb0\n" +
	"\n" +
	"\x11GovernanceService\x12d\n" +
	"\vHealthCheck\x12).vertice.governance.v1.HealthCheckRequest\x1a*.vertice.governance.v1.HealthCheckResponse\x12j\n" +
	"\rCreateSession\x12+.vertice.governance.v1.CreateSessionRequest\x1a,.vertice.governance.v1.CreateSessionResponse\x12g\n" +
	"\fCloseSession\x12*.vertice.governance.v1.CloseSessionRequest\x1a+.vertice.governance.v1.CloseSessionResponse\x12\x7f\n" +
	"\x14ListPendingDecisions\x122.vertice.governance.v1.ListPendingDecisionsRequest\x1a3.vertice.governance.v1.ListPendingDecisionsResponse\x12d\n" +
	"\vGetDecision\x12).vertice.governance.v1.GetDecisionRequest\x1a*.vertice.governance.v1.GetDecisionResponse\x12p\n" +
	"\x0fApproveDecision\x12-.vertice.governance.v1.ApproveDecisionRequest\x1a..vertice.governance.v1.ApproveDecisionResponse\x12m\n" +
	"\x0eRejectDecision\x12,.vertice.governance.v1.RejectDecisionRequest\x1a-.vertice.governance.v1.RejectDecisionResponse\x12s\n" +
	"\x10EscalateDecision\x12..vertice.governance.v1.EscalateDecisionRequest\x1a/.vertice.governance.v1.EscalateDecisionResponse\x12a\n" +
	"\n" +
	"GetMetrics\x12(.vertice.governance.v1.GetMetricsRequest\x1a).vertice.governance.v1.GetMetricsResponse\x12p\n" +
	"\x0fGetSessionStats\x12-.vertice.governance.v1.GetSessionStatsRequest\x1a..vertice.governance.v1.GetSessionStatsResponse\x12h\n" +
	"\x0fStreamDecisions\x12-.vertice.governance.v1.StreamDecisionsRequest\x1a$.vertice.governance.v1.DecisionEvent0\x01\x12d\n" +
	"\fStreamEvents\x12*.vertice.governance.v1.StreamEventsRequest\x1a&.vertice.governance.v1.GovernanceEvent0\x01B>Z<github.com/verticedev/vcli-go/api/grpc/governance;governanceb\x06proto3"

var (
	file_governance_proto_rawDescOnce sync.Once
	file_governance_proto_rawDescData []byte
)

func file_governance_proto_rawDescGZIP() []byte {
	file_governance_proto_rawDescOnce.Do(func() {
		file_governance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_governance_proto_rawDesc), len(file_governance_proto_rawDesc)))
	})
	return file_governance_proto_rawDescData
}

var file_governance_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_governance_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_governance_proto_goTypes = []any{
	(DecisionEvent_EventType)(0),         // 0: vertice.governance.v1.DecisionEvent.EventType
	(GovernanceEvent_EventType)(0),       // 1: vertice.governance.v1.GovernanceEvent.EventType
	(*HealthCheckRequest)(nil),           // 2: vertice.governance.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),          // 3: vertice.governance.v1.HealthCheckResponse
	(*CreateSessionRequest)(nil),         // 4: vertice.governance.v1.CreateSessionRequest
	(*CreateSessionResponse)(nil),        // 5: vertice.governance.v1.CreateSessionResponse
	(*CloseSessionRequest)(nil),          // 6: vertice.governance.v1.CloseSessionRequest
	(*CloseSessionResponse)(nil),         // 7: vertice.governance.v1.CloseSessionResponse
	(*ListPendingDecisionsRequest)(nil),  // 8: vertice.governance.v1.ListPendingDecisionsRequest
	(*ListPendingDecisionsResponse)(nil), // 9: vertice.governance.v1.ListPendingDecisionsResponse
	(*GetDecisionRequest)(nil),           // 10: vertice.governance.v1.GetDecisionRequest
	(*GetDecisionResponse)(nil),          // 11: vertice.governance.v1.GetDecisionResponse
	(*ApproveDecisionRequest)(nil),       // 12: vertice.governance.v1.ApproveDecisionRequest
	(*ApproveDecisionResponse)(nil),      // 13: vertice.governance.v1.ApproveDecisionResponse
	(*RejectDecisionRequest)(nil),        // 14: vertice.governance.v1.RejectDecisionRequest
	(*RejectDecisionResponse)(nil),       // 15: vertice.governance.v1.RejectDecisionResponse
	(*EscalateDecisionRequest)(nil),      // 16: vertice.governance.v1.EscalateDecisionRequest
	(*EscalateDecisionResponse)(nil),     // 17: vertice.governance.v1.EscalateDecisionResponse
	(*GetMetricsRequest)(nil),            // 18: vertice.governance.v1.GetMetricsRequest
	(*GetMetricsResponse)(nil),           // 19: vertice.governance.v1.GetMetricsResponse
	(*GetSessionStatsRequest)(nil),       // 20: vertice.governance.v1.GetSessionStatsRequest
	(*GetSessionStatsResponse)(nil),      // 21: vertice.governance.v1.GetSessionStatsResponse
	(*StreamDecisionsRequest)(nil),       // 22: vertice.governance.v1.StreamDecisionsRequest
	(*DecisionEvent)(nil),                // 23: vertice.governance.v1.DecisionEvent
	(*StreamEventsRequest)(nil),          // 24: vertice.governance.v1.StreamEventsRequest
	(*GovernanceEvent)(nil),              // 25: vertice.governance.v1.GovernanceEvent
	(*Decision)(nil),                     // 26: vertice.governance.v1.Decision
	(*Risk)(nil),                         // 27: vertice.governance.v1.Risk
	(*EthicalAssessment)(nil),            // 28: vertice.governance.v1.EthicalAssessment
	(*EthicalPrinciple)(nil),             // 29: vertice.governance.v1.EthicalPrinciple
	(*Action)(nil),                       // 30: vertice.governance.v1.Action
	(*DecisionHistory)(nil),              // 31: vertice.governance.v1.DecisionHistory
	(*DecisionMetrics)(nil),              // 32: vertice.governance.v1.DecisionMetrics
	nil,                                  // 33: vertice.governance.v1.Decision.ContextEntry
	nil,                                  // 34: vertice.governance.v1.Risk.DetailsEntry
	nil,                                  // 35: vertice.governance.v1.Action.ParametersEntry
	(*timestamppb.Timestamp)(nil),        // 36: google.protobuf.Timestamp
}
var file_governance_proto_depIdxs = []int32{
	36, // 0: vertice.governance.v1.CreateSessionResponse.created_at:type_name -> google.protobuf.Timestamp
	26, // 1: vertice.governance.v1.ListPendingDecisionsResponse.decisions:type_name -> vertice.governance.v1.Decision
	26, // 2: vertice.governance.v1.GetDecisionResponse.decision:type_name -> vertice.governance.v1.Decision
	36, // 3: vertice.governance.v1.ApproveDecisionResponse.processed_at:type_name -> google.protobuf.Timestamp
	36, // 4: vertice.governance.v1.RejectDecisionResponse.processed_at:type_name -> google.protobuf.Timestamp
	36, // 5: vertice.governance.v1.EscalateDecisionResponse.processed_at:type_name -> google.protobuf.Timestamp
	32, // 6: vertice.governance.v1.GetMetricsResponse.metrics:type_name -> vertice.governance.v1.DecisionMetrics
	36, // 7: vertice.governance.v1.GetSessionStatsResponse.session_start:type_name -> google.protobuf.Timestamp
	0,  // 8: vertice.governance.v1.DecisionEvent.type:type_name -> vertice.governance.v1.DecisionEvent.EventType
	26, // 9: vertice.governance.v1.DecisionEvent.decision:type_name -> vertice.governance.v1.Decision
	36, // 10: vertice.governance.v1.DecisionEvent.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 11: vertice.governance.v1.GovernanceEvent.type:type_name -> vertice.governance.v1.GovernanceEvent.EventType
	32, // 12: vertice.governance.v1.GovernanceEvent.metrics:type_name -> vertice.governance.v1.DecisionMetrics
	36, // 13: vertice.governance.v1.GovernanceEvent.timestamp:type_name -> google.protobuf.Timestamp
	33, // 14: vertice.governance.v1.Decision.context:type_name -> vertice.governance.v1.Decision.ContextEntry
	27, // 15: vertice.governance.v1.Decision.risk_assessment:type_name -> vertice.governance.v1.Risk
	28, // 16: vertice.governance.v1.Decision.ethical_assessment:type_name -> vertice.governance.v1.EthicalAssessment
	36, // 17: vertice.governance.v1.Decision.created_at:type_name -> google.protobuf.Timestamp
	36, // 18: vertice.governance.v1.Decision.expires_at:type_name -> google.protobuf.Timestamp
	30, // 19: vertice.governance.v1.Decision.recommended_actions:type_name -> vertice.governance.v1.Action
	31, // 20: vertice.governance.v1.Decision.history:type_name -> vertice.governance.v1.DecisionHistory
	34, // 21: vertice.governance.v1.Risk.details:type_name -> vertice.governance.v1.Risk.DetailsEntry
	29, // 22: vertice.governance.v1.EthicalAssessment.principles:type_name -> vertice.governance.v1.EthicalPrinciple
	35, // 23: vertice.governance.v1.Action.parameters:type_name -> vertice.governance.v1.Action.ParametersEntry
	36, // 24: vertice.governance.v1.DecisionHistory.submitted_at:type_name -> google.protobuf.Timestamp
	36, // 25: vertice.governance.v1.DecisionHistory.reviewed_at:type_name -> google.protobuf.Timestamp
	2,  // 26: vertice.governance.v1.GovernanceService.HealthCheck:input_type -> vertice.governance.v1.HealthCheckRequest
	4,  // 27: vertice.governance.v1.GovernanceService.CreateSession:input_type -> vertice.governance.v1.CreateSessionRequest
	6,  // 28: vertice.governance.v1.GovernanceService.CloseSession:input_type -> vertice.governance.v1.CloseSessionRequest
	8,  // 29: vertice.governance.v1.GovernanceService.ListPendingDecisions:input_type -> vertice.governance.v1.ListPendingDecisionsRequest
	10, // 30: vertice.governance.v1.GovernanceService.GetDecision:input_type -> vertice.governance.v1.GetDecisionRequest
	12, // 31: vertice.governance.v1.GovernanceService.ApproveDecision:input_type -> vertice.governance.v1.ApproveDecisionRequest
	14, // 32: vertice.governance.v1.GovernanceService.RejectDecision:input_type -> vertice.governance.v1.RejectDecisionRequest
	16, // 33: vertice.governance.v1.GovernanceService.EscalateDecision:input_type -> vertice.governance.v1.EscalateDecisionRequest
	18, // 34: vertice.governance.v1.GovernanceService.GetMetrics:input_type -> vertice.governance.v1.GetMetricsRequest
	20, // 35: vertice.governance.v1.GovernanceService.GetSessionStats:input_type -> vertice.governance.v1.GetSessionStatsRequest
	22, // 36: vertice.governance.v1.GovernanceService.StreamDecisions:input_type -> vertice.governance.v1.StreamDecisionsRequest
	24, // 37: vertice.governance.v1.GovernanceService.StreamEvents:input_type -> vertice.governance.v1.StreamEventsRequest
	3,  // 38: vertice.governance.v1.GovernanceService.HealthCheck:output_type -> vertice.governance.v1.HealthCheckResponse
	5,  // 39: vertice.governance.v1.GovernanceService.CreateSession:output_type -> vertice.governance.v1.CreateSessionResponse
	7,  // 40: vertice.governance.v1.GovernanceService.CloseSession:output_type -> vertice.governance.v1.CloseSessionResponse
	9,  // 41: vertice.governance.v1.GovernanceService.ListPendingDecisions:output_type -> vertice.governance.v1.ListPendingDecisionsResponse
	11, // 42: vertice.governance.v1.GovernanceService.GetDecision:output_type -> vertice.governance.v1.GetDecisionResponse
	13, // 43: vertice.governance.v1.GovernanceService.ApproveDecision:output_type -> vertice.governance.v1.ApproveDecisionResponse
	15, // 44: vertice.governance.v1.GovernanceService.RejectDecision:output_type -> vertice.governance.v1.RejectDecisionResponse
	17, // 45: vertice.governance.v1.GovernanceService.EscalateDecision:output_type -> vertice.governance.v1.EscalateDecisionResponse
	19, // 46: vertice.governance.v1.GovernanceService.GetMetrics:output_type -> vertice.governance.v1.GetMetricsResponse
	21, // 47: vertice.governance.v1.GovernanceService.GetSessionStats:output_type -> vertice.governance.v1.GetSessionStatsResponse
	23, // 48: vertice.governance.v1.GovernanceService.StreamDecisions:output_type -> vertice.governance.v1.DecisionEvent
	25, // 49: vertice.governance.v1.GovernanceService.StreamEvents:output_type -> vertice.governance.v1.GovernanceEvent
	38, // [38:50] is the sub-list for method output_type
	26, // [26:38] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_governance_proto_init() }
func file_governance_proto_init() {
	if File_governance_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_governance_proto_rawDesc), len(file_governance_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_governance_proto_goTypes,
		DependencyIndexes: file_governance_proto_depIdxs,
		EnumInfos:         file_governance_proto_enumTypes,
		MessageInfos:      file_governance_proto_msgTypes,
	}.Build()
	File_governance_proto = out.File
	file_governance_proto_goTypes = nil
	file_governance_proto_depIdxs = nil
}
