# Test Namespaces
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-namespace
  labels:
    environment: test
    purpose: vcli-integration-testing
---
apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    environment: production
    purpose: vcli-integration-testing
---
apiVersion: v1
kind: Namespace
metadata:
  name: staging
  labels:
    environment: staging
    purpose: vcli-integration-testing

# Test Deployments
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
  labels:
    app: nginx
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        tier: frontend
    spec:
      containers:
        - name: nginx
          image: nginx:1.25-alpine
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: test-namespace
  labels:
    app: api-server
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      labels:
        app: api-server
        tier: backend
    spec:
      containers:
        - name: api
          image: nginx:1.25-alpine
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "128Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: production
  labels:
    app: web-frontend
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-frontend
  template:
    metadata:
      labels:
        app: web-frontend
        tier: frontend
    spec:
      containers:
        - name: web
          image: nginx:1.25-alpine
          ports:
            - containerPort: 80

# Test Services
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: default
  labels:
    app: nginx
spec:
  type: ClusterIP
  selector:
    app: nginx
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: test-namespace
  labels:
    app: api-server
spec:
  type: NodePort
  selector:
    app: api-server
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30080
---
apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: production
  labels:
    app: web-frontend
spec:
  type: LoadBalancer
  selector:
    app: web-frontend
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80

# Test Pods (standalone)
---
apiVersion: v1
kind: Pod
metadata:
  name: standalone-pod
  namespace: default
  labels:
    app: standalone
    tier: utility
spec:
  containers:
    - name: busybox
      image: busybox:1.36
      command: ["sh", "-c", "sleep 3600"]
      resources:
        requests:
          memory: "32Mi"
          cpu: "50m"
        limits:
          memory: "64Mi"
          cpu: "100m"
---
apiVersion: v1
kind: Pod
metadata:
  name: test-pod
  namespace: test-namespace
  labels:
    app: test-utility
    environment: test
spec:
  containers:
    - name: test
      image: busybox:1.36
      command: ["sh", "-c", "sleep 3600"]
