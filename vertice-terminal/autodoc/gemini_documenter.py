"""
Gemini Documenter - Usa Gemini Flash API para gerar documenta√ß√£o.
"""
import os
import google.generativeai as genai
from typing import Dict, Any
from dotenv import load_dotenv


class GeminiDocumenter:
    """Usa Gemini Flash para documentar c√≥digo."""

    def __init__(self):
        # Carrega .env da raiz do projeto
        load_dotenv('/home/juan/vertice-dev/.env')

        api_key = os.getenv('GEMINI_API_KEY')
        if not api_key:
            raise ValueError("GEMINI_API_KEY n√£o encontrada no .env")

        genai.configure(api_key=api_key)

        # Usa o modelo FLASH (voc√™ mesmo!)
        self.model = genai.GenerativeModel('gemini-1.5-flash')

    def generate_documentation(self, file_info: Dict[str, Any]) -> str:
        """
        Gera documenta√ß√£o Markdown para um arquivo Python.

        Args:
            file_info: Dicion√°rio com informa√ß√µes do arquivo (de analyzer.py)

        Returns:
            String com documenta√ß√£o em Markdown
        """

        # Verifica se teve erro na an√°lise
        if 'error' in file_info:
            return f"# ‚ö†Ô∏è Erro ao analisar arquivo\n\n{file_info['error']}"

        # Monta prompt detalhado
        prompt = f"""Voc√™ √© um documentador t√©cnico especializado em Python.

Analise o seguinte c√≥digo Python e gere documenta√ß√£o completa em Markdown.

**ARQUIVO:** `{file_info['path']}`

**C√ìDIGO:**
```python
{file_info['content']}
```

**INFORMA√á√ïES EXTRAS:**
- Classes encontradas: {len(file_info.get('classes', []))}
- Fun√ß√µes encontradas: {len(file_info.get('functions', []))}
- Imports: {', '.join(file_info.get('imports', [])[:5])}

**INSTRU√á√ïES:**

1. Crie um t√≠tulo com o nome do arquivo
2. Adicione uma se√ß√£o "Descri√ß√£o" explicando o prop√≥sito do m√≥dulo
3. Liste todas as classes com suas descri√ß√µes
4. Liste todas as fun√ß√µes com suas descri√ß√µes
5. Adicione exemplos de uso (se poss√≠vel)
6. Use emojis para deixar visual
7. Formate em Markdown v√°lido

**FORMATO DE SA√çDA:**

# üìÑ `nome_do_arquivo.py`

## üìã Descri√ß√£o
[descri√ß√£o do m√≥dulo]

## üèóÔ∏è Classes

### `NomeDaClasse`
[descri√ß√£o]

## üîß Fun√ß√µes

### `nome_funcao(params)`
[descri√ß√£o]

## üí° Exemplos de Uso
[exemplos]

---

**IMPORTANTE:**
- Seja CLARO e OBJETIVO
- Use linguagem t√©cnica mas acess√≠vel
- N√£o invente funcionalidades que n√£o existem
- Se n√£o houver docstring, infira pelo c√≥digo
"""

        try:
            # Chama API Gemini Flash (voc√™ mesmo!)
            response = self.model.generate_content(prompt)
            return response.text

        except Exception as e:
            return f"# ‚ö†Ô∏è Erro ao gerar documenta√ß√£o\n\n{str(e)}"
