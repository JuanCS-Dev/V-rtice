#!/bin/bash
# Script de teste seguro do TUI - Previne loops infinitos

set -e

echo "üîß GOVERNANCE WORKSPACE POC - SAFE TEST"
echo "========================================"
echo ""

# 1. Verifica se o mock server est√° rodando
echo "1Ô∏è‚É£ Verificando mock SSE server..."
if ! curl -s http://localhost:8001/spike/health > /dev/null 2>&1; then
    echo "‚ùå Mock server n√£o est√° rodando!"
    echo "   Execute: uvicorn mock_sse_server:app --reload --port 8001"
    exit 1
fi
echo "‚úÖ Mock server OK (porta 8001)"
echo ""

# 2. Verifica depend√™ncias Python
echo "2Ô∏è‚É£ Verificando depend√™ncias..."
python3 -c "import textual, httpx" 2>/dev/null
if [ $? -ne 0 ]; then
    echo "‚ùå Depend√™ncias faltando!"
    echo "   Execute: pip install -r requirements_spike.txt"
    exit 1
fi
echo "‚úÖ Depend√™ncias OK"
echo ""

# 3. Instru√ß√µes de uso
echo "3Ô∏è‚É£ Iniciando TUI..."
echo ""
echo "üìã COMO SAIR DO TUI:"
echo "   ‚Ä¢ Pressione 'q' (quit)"
echo "   ‚Ä¢ Pressione 'ESC' (escape)"
echo "   ‚Ä¢ Pressione 'Ctrl+C' (for√ßa sa√≠da)"
echo ""
echo "üéÆ ATALHOS:"
echo "   ‚Ä¢ 'r' - Refresh stats"
echo "   ‚Ä¢ 't' - Trigger test event"
echo "   ‚Ä¢ Bot√µes: ‚úì Approve / ‚úó Reject"
echo ""
echo "‚è±Ô∏è  Timeout autom√°tico: 60 segundos"
echo ""
read -p "Pressione ENTER para iniciar o TUI (ou Ctrl+C para cancelar)..."
echo ""

# 4. Executa TUI com timeout de seguran√ßa (2 minutos)
timeout 120 python3 governance_workspace_poc.py

EXIT_CODE=$?

if [ $EXIT_CODE -eq 124 ]; then
    echo ""
    echo "‚è±Ô∏è  Timeout de seguran√ßa atingido (2 minutos)"
    echo "‚úÖ TUI encerrado automaticamente"
elif [ $EXIT_CODE -eq 0 ]; then
    echo ""
    echo "‚úÖ TUI encerrado normalmente"
else
    echo ""
    echo "‚ö†Ô∏è  TUI encerrado com c√≥digo: $EXIT_CODE"
fi

# 5. For√ßa reset do terminal para garantir limpeza
reset

echo ""
echo "‚úÖ Terminal resetado - pronto para uso"
echo ""
