import typer
import asyncio
from rich.console import Console
from typing_extensions import Annotated
from ..connectors.malware import MalwareConnector
from ..utils.output import print_json, spinner_task, print_error, print_table
from ..utils.auth import require_auth
from ..utils.decorators import with_connector
from vertice.utils import primoroso

console = Console()

app = typer.Typer(
    name="malware",
    help="ðŸ¦  Malware analysis and detection operations",
    rich_markup_mode="rich",
)


@app.command()
@with_connector(MalwareConnector)
async def analyze(
    file_path: Annotated[str, typer.Argument(help="File path to analyze for malware")],
    json_output: Annotated[
        bool, typer.Option("--json", "-j", help="Output as JSON")
    ] = False,
    verbose: Annotated[
        bool, typer.Option("--verbose", "-v", help="Verbose output")
    ] = False,
    connector=None,
):
    """Analyze a file for malware.

    Example:
        vertice malware analyze /path/to/suspicious.exe
    """
    if verbose:
        console.print(f"[dim]Analyzing file: {file_path}...[/dim]")
    with spinner_task(f"Analyzing file: {file_path}..."):
        result = await connector.scan_file(file_path)

    if not result:
        return

    if json_output:
        print_json(result)
    else:
        primoroso.success(f"Malware Analysis for {file_path}:")
        print_table([{"Field": k, "Value": str(v)} for k, v in result.items()])


@app.command()
def yara(
    file_path: Annotated[str, typer.Argument(help="File to scan with YARA rules")],
    json_output: Annotated[
        bool, typer.Option("--json", "-j", help="Output as JSON")
    ] = False,
):
    """Scan file with YARA rules.

    Example:
        vertice malware yara /path/to/file
    """
    require_auth()

    primoroso.warning("YARA scanning coming soon...")


@app.command()
def hash(
    hash_value: Annotated[str, typer.Argument(help="File hash to lookup")],
    json_output: Annotated[
        bool, typer.Option("--json", "-j", help="Output as JSON")
    ] = False,
):
    """Lookup file by hash.

    Example:
        vertice malware hash abc123def456
    """
    require_auth()

    primoroso.warning("Hash lookup coming soon...")
