# vertice_cli/modules/osint.py

import typer
import questionary
from rich.table import Table
from rich.panel import Panel
from ..utils.api_client import VerticeAPI
from ..utils import console, print_success, print_error, print_info

app = typer.Typer(help="üîç OSINT Module - Open Source Intelligence Gathering")

@app.command()
def menu():
    """üîç Menu interativo do m√≥dulo OSINT"""
    console.print(Panel.fit(
        "[bold purple]üîç V√âRTICE OSINT MODULE[/bold purple]\n"
        "[dim]Open Source Intelligence - Coleta de intelig√™ncia em fontes abertas[/dim]\n"
        "\n"
        "[yellow]Exemplos de uso:[/yellow]\n"
        "[dim]‚Ä¢ osint email --email target@company.com[/dim]\n"
        "[dim]‚Ä¢ osint phone --phone +5511987654321[/dim]\n"
        "[dim]‚Ä¢ osint username --username john_doe[/dim]\n"
        "[dim]‚Ä¢ osint social --platform instagram --id @targetuser[/dim]",
        style="purple"
    ))

    choices = [
        "üìß Email Analysis - Vazamentos, reputa√ß√£o, MX records",
        "üì± Phone Investigation - Operadora, localiza√ß√£o, tipo de linha",
        "üë§ Username Investigation - Busca em m√∫ltiplas plataformas",
        "üåê Social Media Analysis - Perfis, posts, an√°lise comportamental",
        "üåç Geospatial Intelligence - An√°lise de coordenadas e locais",
        "üìö Ver exemplos e documenta√ß√£o",
        "üîô Voltar ao menu principal"
    ]

    choice = questionary.select(
        "Selecione uma ferramenta:",
        choices=choices
    ).ask()

    if "Email Analysis" in choice:
        show_email_help()
        email_analysis()
    elif "Phone Investigation" in choice:
        show_phone_help()
        phone_investigation()
    elif "Username Investigation" in choice:
        show_username_help()
        username_investigation()
    elif "Social Media" in choice:
        show_social_media_help()
        social_media_analysis()
    elif "Geospatial" in choice:
        show_geospatial_help()
        geospatial_analysis()
    elif "exemplos" in choice:
        show_osint_examples()
    else:
        return

@app.command()
def email_analysis(email: str = typer.Option(None, "--email", "-e", help="Email para an√°lise")):
    """üìß An√°lise completa de email"""
    if not email:
        email = questionary.text("Digite o email para an√°lise:").ask()

    print_info(f"Analisando email: {email}")

    # TODO: Implementar chamada para API
    api = VerticeAPI()
    result = api.analyze_email(email)

    if result:
        print_success("An√°lise de email conclu√≠da!")
        # TODO: Exibir resultados formatados
    else:
        print_error("Falha na an√°lise do email")

@app.command()
def phone_investigation(phone: str = typer.Option(None, "--phone", "-p", help="Telefone para investiga√ß√£o")):
    """üì± Investiga√ß√£o de n√∫mero de telefone"""
    if not phone:
        phone = questionary.text("Digite o n√∫mero de telefone:").ask()

    print_info(f"Investigando telefone: {phone}")

    # TODO: Implementar
    api = VerticeAPI()
    result = api.analyze_phone(phone)

@app.command()
def username_investigation(username: str = typer.Option(None, "--username", "-u", help="Username para investiga√ß√£o")):
    """üë§ Investiga√ß√£o de username em m√∫ltiplas plataformas"""
    if not username:
        username = questionary.text("Digite o username:").ask()

    print_info(f"Investigando username: {username}")

    # TODO: Implementar
    api = VerticeAPI()
    result = api.investigate_username(username)

@app.command()
def social_media_analysis():
    """üåê An√°lise de perfis em redes sociais"""
    platform = questionary.select(
        "Selecione a plataforma:",
        choices=["Instagram", "Twitter/X", "LinkedIn", "Facebook", "Discord", "Telegram"]
    ).ask()

    identifier = questionary.text(f"Digite o username/ID do perfil no {platform}:").ask()

    print_info(f"Analisando perfil {identifier} no {platform}")

    # TODO: Implementar
    api = VerticeAPI()
    result = api.analyze_social_profile(platform.lower(), identifier)

@app.command()
def geospatial_analysis():
    """üåç An√°lise de intelig√™ncia geoespacial"""
    print_info("Geospatial Intelligence - Em implementa√ß√£o")
    # TODO: Implementar an√°lise geoespacial

# Fun√ß√µes de Help Detalhadas

def show_email_help():
    """Help detalhado para Email Analysis"""
    help_content = Panel.fit(
        "[bold cyan]üìß EMAIL ANALYSIS[/bold cyan]\n\n"
        "[cyan]O que faz:[/cyan]\n"
        "Analisa endere√ßos de email buscando vazamentos de dados, reputa√ß√£o,\n"
        "configura√ß√µes DNS e presen√ßa em redes sociais.\n\n"
        "[cyan]Exemplos pr√°ticos:[/cyan]\n"
        "[dim]osint email --email john.doe@company.com[/dim]    # Email corporativo\n"
        "[dim]osint email --email user123@gmail.com[/dim]       # Email pessoal\n"
        "[dim]osint email --email admin@target-site.com[/dim]   # Email de admin\n\n"
        "[cyan]Informa√ß√µes coletadas:[/cyan]\n"
        "‚Ä¢ Vazamentos de dados (breaches conhecidos)\n"
        "‚Ä¢ Score de reputa√ß√£o e classifica√ß√£o de spam\n"
        "‚Ä¢ Registros MX e configura√ß√£o de email\n"
        "‚Ä¢ Contas em redes sociais associadas\n"
        "‚Ä¢ Dom√≠nios e organiza√ß√µes relacionadas\n"
        "‚Ä¢ Atividade em f√≥runs e comunidades online\n\n"
        "[cyan]Fontes consultadas:[/cyan]\n"
        "HaveIBeenPwned, DeHashed, Holehe, EmailRep, DNS records",
        style="cyan"
    )
    console.print(help_content)

def show_phone_help():
    """Help detalhado para Phone Investigation"""
    help_content = Panel.fit(
        "[bold green]üì± PHONE INVESTIGATION[/bold green]\n\n"
        "[cyan]O que faz:[/cyan]\n"
        "Investiga n√∫meros de telefone fornecendo informa√ß√µes sobre\n"
        "operadora, localiza√ß√£o, tipo de linha e poss√≠veis associa√ß√µes.\n\n"
        "[cyan]Exemplos pr√°ticos:[/cyan]\n"
        "[dim]osint phone --phone +5511987654321[/dim]          # Celular brasileiro\n"
        "[dim]osint phone --phone +1234567890[/dim]             # N√∫mero internacional\n"
        "[dim]osint phone --phone 011987654321[/dim]            # Formato nacional\n\n"
        "[cyan]Informa√ß√µes coletadas:[/cyan]\n"
        "‚Ä¢ Pa√≠s e regi√£o de origem\n"
        "‚Ä¢ Operadora e tipo de linha (m√≥vel/fixo)\n"
        "‚Ä¢ C√≥digo de √°rea e localiza√ß√£o aproximada\n"
        "‚Ä¢ Formato v√°lido e varia√ß√µes\n"
        "‚Ä¢ Poss√≠veis contas em redes sociais\n"
        "‚Ä¢ Hist√≥rico de vazamentos (se dispon√≠vel)\n\n"
        "[yellow]Dica:[/yellow] Use formato internacional (+55...) para melhor precis√£o\n"
        "[yellow]Limita√ß√µes:[/yellow] Dados variam conforme pa√≠s e operadora",
        style="green"
    )
    console.print(help_content)

def show_username_help():
    """Help detalhado para Username Investigation"""
    help_content = Panel.fit(
        "[bold blue]üë§ USERNAME INVESTIGATION[/bold blue]\n\n"
        "[cyan]O que faz:[/cyan]\n"
        "Busca um username espec√≠fico em centenas de plataformas\n"
        "e redes sociais, mapeando a presen√ßa digital do alvo.\n\n"
        "[cyan]Exemplos pr√°ticos:[/cyan]\n"
        "[dim]osint username --username john_doe[/dim]           # Username comum\n"
        "[dim]osint username --username cybersec_expert[/dim]    # Username especializado\n"
        "[dim]osint username --username target123[/dim]         # Username alfanum√©rico\n\n"
        "[cyan]Plataformas verificadas:[/cyan]\n"
        "‚Ä¢ Redes sociais: Instagram, Twitter, Facebook, LinkedIn\n"
        "‚Ä¢ Plataformas dev: GitHub, GitLab, Stack Overflow\n"
        "‚Ä¢ F√≥runs: Reddit, Discord, Telegram\n"
        "‚Ä¢ Outros: YouTube, TikTok, Twitch, Steam, Xbox\n"
        "‚Ä¢ Sites adultos, dating e marketplace\n\n"
        "[cyan]Informa√ß√µes retornadas:[/cyan]\n"
        "‚Ä¢ Lista de contas encontradas com URLs\n"
        "‚Ä¢ Probabilidade de ser a mesma pessoa\n"
        "‚Ä¢ Dados p√∫blicos dos perfis (quando dispon√≠vel)\n"
        "‚Ä¢ Cross-reference entre plataformas",
        style="blue"
    )
    console.print(help_content)

def show_social_media_help():
    """Help detalhado para Social Media Analysis"""
    help_content = Panel.fit(
        "[bold magenta]üåê SOCIAL MEDIA ANALYSIS[/bold magenta]\n\n"
        "[cyan]O que faz:[/cyan]\n"
        "An√°lise profunda de perfis em redes sociais incluindo posts,\n"
        "conex√µes, padr√µes comportamentais e metadados.\n\n"
        "[cyan]Plataformas suportadas:[/cyan]\n"
        "[dim]--platform instagram[/dim]  # An√°lise de perfil do Instagram\n"
        "[dim]--platform twitter[/dim]    # Posts e intera√ß√µes do Twitter\n"
        "[dim]--platform linkedin[/dim]   # Perfil profissional\n"
        "[dim]--platform facebook[/dim]   # Dados p√∫blicos do Facebook\n"
        "[dim]--platform telegram[/dim]   # Canais e grupos p√∫blicos\n\n"
        "[cyan]Exemplos pr√°ticos:[/cyan]\n"
        "[dim]osint social --platform instagram --id @john_doe[/dim]\n"
        "[dim]osint social --platform twitter --id johndoe123[/dim]\n"
        "[dim]osint social --platform linkedin --id john-doe-analyst[/dim]\n\n"
        "[cyan]Dados extra√≠dos:[/cyan]\n"
        "‚Ä¢ Informa√ß√µes do perfil (bio, foto, seguidores)\n"
        "‚Ä¢ Posts recentes e an√°lise de conte√∫do\n"
        "‚Ä¢ Padr√µes de atividade (hor√°rios, frequ√™ncia)\n"
        "‚Ä¢ An√°lise de sentimento e temas\n"
        "‚Ä¢ Geolocaliza√ß√£o (quando dispon√≠vel)\n"
        "‚Ä¢ Conex√µes e intera√ß√µes relevantes",
        style="magenta"
    )
    console.print(help_content)

def show_geospatial_help():
    """Help detalhado para Geospatial Intelligence"""
    help_content = Panel.fit(
        "[bold yellow]üåç GEOSPATIAL INTELLIGENCE[/bold yellow]\n\n"
        "[cyan]O que faz:[/cyan]\n"
        "An√°lise de coordenadas, endere√ßos e locais usando imagens de\n"
        "sat√©lite, Street View e bases de dados geogr√°ficas.\n\n"
        "[cyan]Funcionalidades:[/cyan]\n"
        "‚Ä¢ An√°lise de coordenadas GPS\n"
        "‚Ä¢ Reverse geocoding (coordenadas ‚Üí endere√ßo)\n"
        "‚Ä¢ An√°lise de metadados EXIF em imagens\n"
        "‚Ä¢ Busca por landmarks e pontos de interesse\n"
        "‚Ä¢ Correla√ß√£o com dados de transporte p√∫blico\n\n"
        "[cyan]Exemplos de uso:[/cyan]\n"
        "[dim]osint geospatial --coords \"-23.5505,-46.6333\"[/dim]  # S√£o Paulo\n"
        "[dim]osint geospatial --address \"Times Square, NYC\"[/dim]\n"
        "[dim]osint geospatial --image /path/to/photo.jpg[/dim]     # Extrair EXIF\n\n"
        "[yellow]Aplica√ß√µes:[/yellow]\n"
        "‚Ä¢ Verifica√ß√£o de localiza√ß√£o em posts\n"
        "‚Ä¢ An√°lise forense de imagens\n"
        "‚Ä¢ Investiga√ß√£o de check-ins\n"
        "‚Ä¢ Correla√ß√£o geogr√°fica de dados",
        style="yellow"
    )
    console.print(help_content)

def show_osint_examples():
    """Exemplos pr√°ticos completos do m√≥dulo OSINT"""
    examples_content = Panel.fit(
        "[bold purple]üìö EXEMPLOS PR√ÅTICOS DO M√ìDULO OSINT[/bold purple]\n\n"
        "[green]1. Investiga√ß√£o Completa de Pessoa:[/green]\n"
        "[dim]# Busca inicial por email[/dim]\n"
        "[dim]osint email --email target@company.com[/dim]\n"
        "[dim]# Investigar username encontrado[/dim]\n"
        "[dim]osint username --username target_user[/dim]\n"
        "[dim]# Analisar perfis sociais descobertos[/dim]\n"
        "[dim]osint social --platform linkedin --id target-user-analyst[/dim]\n\n"
        "[green]2. Due Diligence Empresarial:[/green]\n"
        "[dim]# Analisar dom√≠nio corporativo[/dim]\n"
        "[dim]cyber domain --domain target-company.com[/dim]\n"
        "[dim]# Investigar emails de executivos[/dim]\n"
        "[dim]osint email --email ceo@target-company.com[/dim]\n"
        "[dim]# Mapear presen√ßa digital da empresa[/dim]\n"
        "[dim]osint username --username target_company[/dim]\n\n"
        "[green]3. Investiga√ß√£o de Fraude Online:[/green]\n"
        "[dim]# Verificar telefone suspeito[/dim]\n"
        "[dim]osint phone --phone +5511999887766[/dim]\n"
        "[dim]# Analisar perfil social falso[/dim]\n"
        "[dim]osint social --platform instagram --id @fake_profile[/dim]\n\n"
        "[green]4. Background Check Completo:[/green]\n"
        "[dim]# Pipeline automatizado (exemplo)[/dim]\n"
        "[dim]osint email --email john@company.com | osint cross-reference[/dim]\n\n"
        "[yellow]Dica √âtica:[/yellow] Sempre respeite privacidade e termos de uso das plataformas",
        style="purple"
    )
    console.print(examples_content)

if __name__ == "__main__":
    app()