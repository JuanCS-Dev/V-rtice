#!/bin/bash
set -e

echo "üöÄ V√âRTICE - MATERIALIZA√á√ÉO V√çDEO FINAL v2.0"
echo "============================================="
echo "Orquestrador Unificado (Constitution v2.7)"
echo ""

# Timestamp para logs
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
LOG_FILE="log_producao_final_${TIMESTAMP}.txt"

# Fun√ß√£o de log
log() {
  echo "[$(date '+%H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Valida√ß√µes de ambiente
log "üîç FASE 1: Valida√ß√£o de ambiente"

if [ ! -f "../check_ambiente.sh" ]; then
  log "‚ùå ERRO: check_ambiente.sh n√£o encontrado"
  exit 1
fi

if ! bash ../check_ambiente.sh; then
  log "‚ùå ERRO: Ambiente n√£o v√°lido"
  exit 1
fi

log "‚úÖ Ambiente validado"

# Verificar frontend rodando
if ! curl -s http://localhost:5173 > /dev/null; then
  log "‚ùå ERRO: Frontend n√£o est√° rodando em localhost:5173"
  log "Execute: cd ../frontend && npm run dev"
  exit 1
fi

log "‚úÖ Frontend dispon√≠vel"

# FASE 2: Gera√ß√£o de narra√ß√£o
log ""
log "üé§ FASE 2: Gera√ß√£o de narra√ß√£o (TTS)"

if [ ! -f "gerar_narracao_gcp.sh" ]; then
  log "‚ùå ERRO: gerar_narracao_gcp.sh n√£o encontrado"
  exit 1
fi

log "Executando TTS..."
if bash gerar_narracao_gcp.sh >> "$LOG_FILE" 2>&1; then
  log "‚úÖ Narra√ß√£o gerada com sucesso"
else
  log "‚ùå ERRO: Falha na gera√ß√£o de narra√ß√£o"
  exit 1
fi

# Validar √°udios
AUDIO_COUNT=$(ls audio_narracoes/*.mp3 2>/dev/null | wc -l)
if [ "$AUDIO_COUNT" -lt 11 ]; then
  log "‚ùå ERRO: Apenas $AUDIO_COUNT √°udios gerados (esperado: 11)"
  exit 1
fi

log "‚úÖ $AUDIO_COUNT √°udios validados"

# FASE 3: Grava√ß√£o do tour
log ""
log "üé¨ FASE 3: Grava√ß√£o do tour (Playwright)"

if [ ! -f "video_tour.spec.ts" ]; then
  log "‚ùå ERRO: video_tour.spec.ts n√£o encontrado"
  exit 1
fi

log "Executando grava√ß√£o..."
if npx playwright test video_tour.spec.ts >> "$LOG_FILE" 2>&1; then
  log "‚úÖ Tour gravado com sucesso"
else
  log "‚ùå ERRO: Falha na grava√ß√£o"
  exit 1
fi

# FASE 4: Extra√ß√£o de v√≠deo
log ""
log "üîÑ FASE 4: Extra√ß√£o de v√≠deo"

if bash extrair_video_v2.sh >> "$LOG_FILE" 2>&1; then
  log "‚úÖ V√≠deo extra√≠do com sucesso"
else
  log "‚ùå ERRO: Falha na extra√ß√£o"
  exit 1
fi

# Validar dura√ß√£o
DURACAO=$(ffprobe -v quiet -show_entries format=duration -of csv=p=0 video_bruto.mp4 2>/dev/null)
DURACAO_INT=$(echo "$DURACAO" | cut -d'.' -f1)

if [ "$DURACAO_INT" -lt 170 ]; then
  log "‚ùå ERRO: V√≠deo muito curto (${DURACAO_INT}s < 170s)"
  exit 1
fi

log "‚úÖ Dura√ß√£o validada: ${DURACAO}s"

# FASE 5: Montagem final
log ""
log "üéµ FASE 5: Montagem final"

if bash montagem_final_v2.sh >> "$LOG_FILE" 2>&1; then
  log "‚úÖ Montagem conclu√≠da"
else
  log "‚ùå ERRO: Falha na montagem"
  exit 1
fi

# Valida√ß√£o final
if [ ! -f "video_final_v2.mp4" ]; then
  log "‚ùå ERRO: video_final_v2.mp4 n√£o foi criado"
  exit 1
fi

DURACAO_FINAL=$(ffprobe -v quiet -show_entries format=duration -of csv=p=0 video_final_v2.mp4 2>/dev/null)
TAMANHO_FINAL=$(du -h video_final_v2.mp4 | cut -f1)

log "‚úÖ V√≠deo final: ${DURACAO_FINAL}s, $TAMANHO_FINAL"

# FASE 6: Artefatos finais
log ""
log "üéØ FASE 6: Gerando artefatos"

# Preview de 10s
ffmpeg -y -i video_final_v2.mp4 \
  -t 10 \
  -c:v libx264 -crf 28 \
  -c:a aac -b:a 128k \
  preview_10s.mp4 \
  -loglevel error 2>/dev/null

log "‚úÖ Preview gerado: preview_10s.mp4"

# Limpeza de tempor√°rios
log ""
log "üßπ Limpeza de arquivos tempor√°rios"

rm -f video_bruto.mp4 2>/dev/null || true
rm -rf test-results 2>/dev/null || true

log "‚úÖ Limpeza conclu√≠da"

# Relat√≥rio final
log ""
log "============================================="
log "üéâ PRODU√á√ÉO COMPLETA!"
log ""
log "üìπ ARTEFATOS FINAIS:"
log "   ‚Ä¢ video_final_v2.mp4 (${DURACAO_FINAL}s, $TAMANHO_FINAL)"
log "   ‚Ä¢ preview_10s.mp4 (10s preview)"
log "   ‚Ä¢ thumbnail.jpg (frame 30s)"
log "   ‚Ä¢ $LOG_FILE (log completo)"
log ""
log "üìä M√âTRICAS:"
log "   ‚Ä¢ Cenas: 11"
log "   ‚Ä¢ √Åudios: $AUDIO_COUNT"
log "   ‚Ä¢ Dura√ß√£o: ${DURACAO_FINAL}s"
log "   ‚Ä¢ Resolu√ß√£o: 1920x1080"
log ""
log "‚úÖ CONFORMIDADE: Constitui√ß√£o V√©rtice v2.7"
log "============================================="